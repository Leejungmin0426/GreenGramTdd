[2024-12-11 11:10:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5180 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 11:10:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 11:10:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 11:10:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 11:10:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10856 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 11:10:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 11:10:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 11:10:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 11:10:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 11:10:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1024 ms
[2024-12-11 11:10:47 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 11:10:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 11:10:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 962 ms
[2024-12-11 11:10:47 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 11:10:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 11:10:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 11:10:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.189 seconds (process running for 2.677)
[2024-12-11 11:10:53 WARN restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] Unable to start LiveReload server
[2024-12-11 11:10:53 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
[2024-12-11 11:10:54 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

[2024-12-11 11:14:28 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6944 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 11:14:28 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 11:14:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 11:14:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 11:14:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 11:14:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 857 ms
[2024-12-11 11:14:29 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 11:14:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 11:14:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 11:14:30 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.806 seconds (process running for 2.158)
[2024-12-11 11:30:00 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 11:30:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6944 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 11:30:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 11:30:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 11:30:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 221 ms
[2024-12-11 11:30:00 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 11:30:01 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 11:30:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 11:30:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.394 seconds (process running for 933.058)
[2024-12-11 11:30:01 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 11:42:42 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
[2024-12-11 11:42:42 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6944 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 11:42:42 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 11:42:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 11:42:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 333 ms
[2024-12-11 11:42:43 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 11:42:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 11:42:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 11:42:43 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.788 seconds (process running for 1695.547)
[2024-12-11 11:42:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 11:42:44 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (2 additions, 0 deletions, 0 modifications)
[2024-12-11 11:42:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6944 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 11:42:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 11:42:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 11:42:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 229 ms
[2024-12-11 11:42:45 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 11:42:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 11:42:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 11:42:45 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.408 seconds (process running for 1697.452)
[2024-12-11 11:42:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 11:56:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 11:56:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 11:56:15 INFO http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 227 ms
[2024-12-11 12:33:55 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c809535
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|60              |ㄹㅇㄹㄹㄹㄹㄹ |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 12:33:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:33:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:34:00 INFO http-nio-8080-exec-9] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@1c594390
[2024-12-11 12:34:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 232 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 12:34:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 232
        , user_id = 2
 {executed in 0 msec}
[2024-12-11 12:34:45 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=215, userId=2, comment=진짜 변태같이 그렸다)
[2024-12-11 12:34:45 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 215
        , `user_id` = 2
        , `comment` = '진짜 변태같이 그렸다'
 {executed in 0 msec}
[2024-12-11 12:34:45 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 215
        , `user_id` = 2
        , `comment` = '진짜 변태같이 그렸다'
 {executed in 0 msec}
[2024-12-11 12:34:45 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|63        |
|----------|

[2024-12-11 12:41:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 12:41:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 12:42:03 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11160 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 12:42:03 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 12:42:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 12:42:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 12:42:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 12:42:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 817 ms
[2024-12-11 12:42:04 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 12:42:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 12:42:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 12:42:04 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.712 seconds (process running for 2.056)
[2024-12-11 12:42:13 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 12:42:13 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42d33064
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|60              |ㄹㅇㄹㄹㄹㄹㄹ |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 1 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 1 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 1 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 12:42:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:30 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=dddd)
[2024-12-11 12:42:30 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'dddd'
 {executed in 0 msec}
[2024-12-11 12:42:30 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'dddd'
 {executed in 0 msec}
[2024-12-11 12:42:30 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|64        |
|----------|

[2024-12-11 12:42:34 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=dddd)
[2024-12-11 12:42:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'dddd'
 {executed in 0 msec}
[2024-12-11 12:42:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'dddd'
 {executed in 0 msec}
[2024-12-11 12:42:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|65        |
|----------|

[2024-12-11 12:42:44 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=dddddd)
[2024-12-11 12:42:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'dddddd'
 {executed in 15 msec}
[2024-12-11 12:42:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'dddddd'
 {executed in 0 msec}
[2024-12-11 12:42:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|66        |
|----------|

[2024-12-11 12:42:46 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=66, userId=2)
[2024-12-11 12:42:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 66
        AND user_id = 2
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 12:42:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:53 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=232, startIdx=3, size=21)
[2024-12-11 12:42:53 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-11 12:42:53 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|60              |ㄹㅇㄹㄹㄹㄹㄹ |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-11 12:42:58 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=2)
[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ  |헤헤헤헤헤    |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff   |ffff     |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf    |fff      |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|229     |zzz      |zzz      |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss      |aaaa     |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg    |gd       |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg      |gg       |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd     |dddd     |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz      |zz       |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null)]
[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 2;
 {executed in 3 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |2024-11-29 12:30:29 |쩡미깜띠기ㅎㅎㅎ |0        |2         |9         |1               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 12:42:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 12:42:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 12:43:08 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=222, userId=2, comment=dddd)
[2024-12-11 12:43:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 222
        , `user_id` = 2
        , `comment` = 'dddd'
 {executed in 0 msec}
[2024-12-11 12:43:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 222
        , `user_id` = 2
        , `comment` = 'dddd'
 {executed in 0 msec}
[2024-12-11 12:43:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|67        |
|----------|

[2024-12-11 12:54:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 12:54:43 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 12:54:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10628 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 12:54:47 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 12:54:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 12:54:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 12:54:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 12:54:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 842 ms
[2024-12-11 12:54:48 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 12:54:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 12:54:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 12:54:48 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.883 seconds (process running for 2.589)
[2024-12-11 12:55:37 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-11 12:55:37 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10628 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 12:55:37 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 12:55:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 12:55:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 207 ms
[2024-12-11 12:55:37 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 12:55:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 12:55:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 12:55:38 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.381 seconds (process running for 52.106)
[2024-12-11 12:55:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 13:02:34 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4680 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 13:02:34 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 13:02:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 13:02:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 13:02:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 13:02:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 800 ms
[2024-12-11 13:02:35 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 13:02:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 13:02:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 13:02:36 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.856 seconds (process running for 2.32)
[2024-12-11 13:02:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 13:02:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42d33064
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 1 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 1 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 1 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:02:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:02:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:55 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=232, startIdx=3, size=21)
[2024-12-11 13:02:55 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-11 13:02:55 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|60              |ㄹㅇㄹㄹㄹㄹㄹ |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:02:58 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=60, userId=2)
[2024-12-11 13:02:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 60
        AND user_id = 2
 {executed in 2 msec}
[2024-12-11 13:03:03 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=ㄱㄱㄱㄱㄱ)
[2024-12-11 13:03:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㄱㄱㄱㄱㄱ'
 {executed in 0 msec}
[2024-12-11 13:03:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㄱㄱㄱㄱㄱ'
 {executed in 0 msec}
[2024-12-11 13:03:03 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|68        |
|----------|

[2024-12-11 13:03:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=ㄱㄱㄱㄱㅈㅅ)
[2024-12-11 13:03:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㄱㄱㄱㄱㅈㅅ'
 {executed in 14 msec}
[2024-12-11 13:03:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㄱㄱㄱㄱㅈㅅ'
 {executed in 0 msec}
[2024-12-11 13:03:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|69        |
|----------|

[2024-12-11 13:03:13 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@355f4324
[2024-12-11 13:03:13 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 232 AND user_id = 2
 {executed in 1 msec}
[2024-12-11 13:03:13 INFO http-nio-8080-exec-6] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@4094d977
[2024-12-11 13:03:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 232 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 13:03:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 232
        , user_id = 2
 {executed in 2 msec}
[2024-12-11 13:03:18 INFO http-nio-8080-exec-3] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@1475bc26
[2024-12-11 13:03:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 230 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 13:03:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 230
        , user_id = 2
 {executed in 3 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 15 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:03:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:03:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:30 INFO http-nio-8080-exec-6] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@6dc33765
[2024-12-11 13:06:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 230 AND user_id = 2
 {executed in 2 msec}
[2024-12-11 13:06:32 INFO http-nio-8080-exec-3] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@6457c4e0
[2024-12-11 13:06:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 230 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 13:06:32 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 230
        , user_id = 2
 {executed in 3 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:06:36 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:06:36 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 13:07:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 13:07:06 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5900 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 13:07:06 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 13:07:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 13:07:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 13:07:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 13:07:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 817 ms
[2024-12-11 13:07:07 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 13:07:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 13:07:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 13:07:07 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.757 seconds (process running for 2.107)
[2024-12-11 13:07:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 13:07:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6ce1ee43
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:07:10 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:10 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 1 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:07:11 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:11 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:13 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@759af062
[2024-12-11 13:07:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 231 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 13:07:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 231
        , user_id = 2
 {executed in 3 msec}
[2024-12-11 13:07:15 INFO http-nio-8080-exec-3] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@33ad957
[2024-12-11 13:07:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 230 AND user_id = 2
 {executed in 2 msec}
[2024-12-11 13:07:17 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@56c6060b
[2024-12-11 13:07:17 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
        WHERE feed_id = 230 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 13:07:17 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
        SET feed_id = 230
        , user_id = 2
 {executed in 2 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, createdAt=2024-12-10 10:55:19, location=헤헤헤헤헤, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, createdAt=2024-12-10 10:54:13, location=ffff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, createdAt=2024-12-10 10:53:50, location=fff, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, createdAt=2024-12-10 10:51:07, location=zzz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, createdAt=2024-12-10 10:50:00, location=aaaa, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, createdAt=2024-12-10 10:49:50, location=gd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, createdAt=2024-12-10 10:49:12, location=gg, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, createdAt=2024-12-10 09:43:32, location=dddd, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, createdAt=2024-12-10 08:56:23, location=zz, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, createdAt=2024-12-06 09:37:27, location=ㅋㅋㅋ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, createdAt=2024-12-06 09:37:14, location=ㅍㅍ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, createdAt=2024-12-06 09:35:19, location=ㅠㅠ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, location=ㅁㄴㅇㅁㄴㅇ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:29:56, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, createdAt=2024-12-06 09:26:39, location=헤헤헤헤헤, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, createdAt=2024-12-06 09:23:17, location=제발, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., createdAt=2024-12-06 08:54:15, location=꺄아~~~, writerUserId=4, writerNm=미니미, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, createdAt=2024-12-05 20:35:26, location=Sample Location, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, createdAt=2024-12-03 16:32:05, location=머니게임, writerUserId=8, writerNm=22, writerPic=null, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, createdAt=2024-12-03 13:11:04, location=따뜻한 안방, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, pics=null, comment=null)]
[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:07:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:07:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:09:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 13:09:51 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 13:09:54 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10764 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 13:09:54 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 13:09:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 13:09:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 13:09:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 13:09:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 808 ms
[2024-12-11 13:09:55 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 13:09:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 13:09:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 13:09:55 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.762 seconds (process running for 2.158)
[2024-12-11 13:10:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 13:10:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4b6d049a
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 1 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 1 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 1 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:10:02 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:02 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 13:10:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 13:10:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 13:10:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 13:10:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 13:10:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 13:10:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 13:10:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 804 ms
[2024-12-11 13:10:23 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 13:10:23 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 13:10:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 13:10:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.737 seconds (process running for 2.081)
[2024-12-11 13:10:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 13:10:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@39dd008b
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 1 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 1 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 13:10:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 13:10:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:21:23 INFO http-nio-8080-exec-9] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.176
[2024-12-11 14:21:23 INFO http-nio-8080-exec-7] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.26
[2024-12-11 14:21:42 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=31m43s641ms426µs401ns).
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 1 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 14:24:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|193     |I am panguin  |남극       |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |0      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |0      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |0      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |0      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|193     |I am panguin  |남극       |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |0      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |0      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |0      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |0      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 14:24:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=3, size=20, startIdx=40), signedUserId=2, profileUserId=null)
[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|84      |ㅠㅠ           |ㅠ        |2024-11-29 18:47:44 |4              |미니미      |null                                     |0      |
|83      |ㅓㅓ           |ㅓ        |2024-11-29 18:46:38 |4              |미니미      |null                                     |0      |
|82      |ㅃ            |ㅃ        |2024-11-29 18:45:16 |4              |미니미      |null                                     |0      |
|81      |ㅍㅍ           |ㅍ        |2024-11-29 18:17:02 |4              |미니미      |null                                     |0      |
|80      |ㅋㅋ           |ㅋ        |2024-11-29 18:14:37 |4              |미니미      |null                                     |0      |
|79      |asd          |asd      |2024-11-29 18:05:12 |9              |asd      |0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg |0      |
|78      |sda          |asd      |2024-11-29 18:01:47 |10             |h        |9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg |0      |
|77      |ㅎㅎㅎㅎ         |ㅎㅎ       |2024-11-29 17:53:55 |4              |미니미      |null                                     |0      |
|76      |ㅃㅂ           |ㅃ        |2024-11-29 17:40:38 |4              |미니미      |null                                     |0      |
|75      |nnnn         |nn       |2024-11-29 17:38:09 |4              |미니미      |null                                     |0      |
|74      |ㅎㅎㅎ          |ㅎㅎ       |2024-11-29 17:31:25 |4              |미니미      |null                                     |0      |
|73      |ㅋㅋㅋ          |ㅋㅋ       |2024-11-29 17:22:01 |4              |미니미      |null                                     |0      |
|72      |ㅋㅋㅋㅋ         |ㅋㅋ       |2024-11-29 17:07:11 |4              |미니미      |null                                     |0      |
|71      |I am panguin |남극       |2024-11-29 16:55:58 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|70      |자~           |드가자~     |2024-11-29 16:41:27 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|69      |자~           |드가자~     |2024-11-29 16:41:18 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|68      |자~           |드가자~     |2024-11-29 16:41:12 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|67      |h            |h        |2024-11-29 16:40:39 |10             |h        |9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg |0      |
|66      |h            |h        |2024-11-29 16:39:48 |10             |h        |9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg |0      |
|64      |바보           |헤헷       |2024-11-29 16:39:36 |9              |asd      |0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg |0      |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=84, contents=ㅠㅠ, location=ㅠ, createdAt=2024-11-29 18:47:44, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=83, contents=ㅓㅓ, location=ㅓ, createdAt=2024-11-29 18:46:38, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=82, contents=ㅃ, location=ㅃ, createdAt=2024-11-29 18:45:16, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=81, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:17:02, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=80, contents=ㅋㅋ, location=ㅋ, createdAt=2024-11-29 18:14:37, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=79, contents=asd, location=asd, createdAt=2024-11-29 18:05:12, writerUserId=9, writerNm=asd, writerPic=0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=78, contents=sda, location=asd, createdAt=2024-11-29 18:01:47, writerUserId=10, writerNm=h, writerPic=9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=77, contents=ㅎㅎㅎㅎ, location=ㅎㅎ, createdAt=2024-11-29 17:53:55, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=76, contents=ㅃㅂ, location=ㅃ, createdAt=2024-11-29 17:40:38, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=75, contents=nnnn, location=nn, createdAt=2024-11-29 17:38:09, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=74, contents=ㅎㅎㅎ, location=ㅎㅎ, createdAt=2024-11-29 17:31:25, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=73, contents=ㅋㅋㅋ, location=ㅋㅋ, createdAt=2024-11-29 17:22:01, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=72, contents=ㅋㅋㅋㅋ, location=ㅋㅋ, createdAt=2024-11-29 17:07:11, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=71, contents=I am panguin, location=남극, createdAt=2024-11-29 16:55:58, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=70, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:27, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=69, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:18, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=68, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:12, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=67, contents=h, location=h, createdAt=2024-11-29 16:40:39, writerUserId=10, writerNm=h, writerPic=9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=66, contents=h, location=h, createdAt=2024-11-29 16:39:48, writerUserId=10, writerNm=h, writerPic=9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=64, contents=바보, location=헤헷, createdAt=2024-11-29 16:39:36, writerUserId=9, writerNm=asd, writerPic=0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 84
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6495b107-f128-4f66-8d42-37f7e0d0dc92.PNG |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 84
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 83
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29edf419-b3db-4850-bd7f-4b97fd683d26.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 83
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 82
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b65a27e4-c8dd-4845-af4c-914fa030b42d.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 82
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|42              |zzz     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58f5394e-34fc-4ede-8bd1-d15169d46d95.webp |
|------------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 81
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0a94db56-a4ed-42a7-b482-38647c629c01.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|6da59fed-e619-4ad3-88a8-e4bba28735dd.jfif |
|------------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3d78d23-0d9c-4593-abbe-df5c3e1c5016.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7ae4e1f3-f035-4628-bb6c-3c4f917017ac.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ed35ba5a-cb56-4378-b6f5-610fc218efc0.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|18d86657-b95d-4fd9-9a39-5b4f08886a28.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|083cc6cf-a3aa-429b-87b1-78223acb1d93.webp |
|------------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 74
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d2ea6873-d45a-408e-a0dc-1fa3bcb2c3b5.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd5c3dc3-9193-4e8e-848b-cf19d8863f36.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|64d3ccb0-ab6a-4901-b54d-8ef06331068b.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3c519ef-1d13-4845-a332-04654dc3c74c.png |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|06c9bc59-a00f-4c35-b342-10e35fc755fe.gif |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 69
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|44cb2df1-1227-4291-a68a-7a4256313644.png |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e71a614f-755f-4ad9-a0ec-ed4edb5846b2.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9405441e-5d30-4f64-998e-291bbb468f98.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a6ceef74-6e17-439b-ade3-e9ba9063d102.gif |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=3, size=20, startIdx=40), signedUserId=2, profileUserId=null)
[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|84      |ㅠㅠ           |ㅠ        |2024-11-29 18:47:44 |4              |미니미      |null                                     |0      |
|83      |ㅓㅓ           |ㅓ        |2024-11-29 18:46:38 |4              |미니미      |null                                     |0      |
|82      |ㅃ            |ㅃ        |2024-11-29 18:45:16 |4              |미니미      |null                                     |0      |
|81      |ㅍㅍ           |ㅍ        |2024-11-29 18:17:02 |4              |미니미      |null                                     |0      |
|80      |ㅋㅋ           |ㅋ        |2024-11-29 18:14:37 |4              |미니미      |null                                     |0      |
|79      |asd          |asd      |2024-11-29 18:05:12 |9              |asd      |0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg |0      |
|78      |sda          |asd      |2024-11-29 18:01:47 |10             |h        |9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg |0      |
|77      |ㅎㅎㅎㅎ         |ㅎㅎ       |2024-11-29 17:53:55 |4              |미니미      |null                                     |0      |
|76      |ㅃㅂ           |ㅃ        |2024-11-29 17:40:38 |4              |미니미      |null                                     |0      |
|75      |nnnn         |nn       |2024-11-29 17:38:09 |4              |미니미      |null                                     |0      |
|74      |ㅎㅎㅎ          |ㅎㅎ       |2024-11-29 17:31:25 |4              |미니미      |null                                     |0      |
|73      |ㅋㅋㅋ          |ㅋㅋ       |2024-11-29 17:22:01 |4              |미니미      |null                                     |0      |
|72      |ㅋㅋㅋㅋ         |ㅋㅋ       |2024-11-29 17:07:11 |4              |미니미      |null                                     |0      |
|71      |I am panguin |남극       |2024-11-29 16:55:58 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|70      |자~           |드가자~     |2024-11-29 16:41:27 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|69      |자~           |드가자~     |2024-11-29 16:41:18 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|68      |자~           |드가자~     |2024-11-29 16:41:12 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|67      |h            |h        |2024-11-29 16:40:39 |10             |h        |9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg |0      |
|66      |h            |h        |2024-11-29 16:39:48 |10             |h        |9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg |0      |
|64      |바보           |헤헷       |2024-11-29 16:39:36 |9              |asd      |0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg |0      |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=84, contents=ㅠㅠ, location=ㅠ, createdAt=2024-11-29 18:47:44, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=83, contents=ㅓㅓ, location=ㅓ, createdAt=2024-11-29 18:46:38, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=82, contents=ㅃ, location=ㅃ, createdAt=2024-11-29 18:45:16, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=81, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:17:02, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=80, contents=ㅋㅋ, location=ㅋ, createdAt=2024-11-29 18:14:37, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=79, contents=asd, location=asd, createdAt=2024-11-29 18:05:12, writerUserId=9, writerNm=asd, writerPic=0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=78, contents=sda, location=asd, createdAt=2024-11-29 18:01:47, writerUserId=10, writerNm=h, writerPic=9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=77, contents=ㅎㅎㅎㅎ, location=ㅎㅎ, createdAt=2024-11-29 17:53:55, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=76, contents=ㅃㅂ, location=ㅃ, createdAt=2024-11-29 17:40:38, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=75, contents=nnnn, location=nn, createdAt=2024-11-29 17:38:09, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=74, contents=ㅎㅎㅎ, location=ㅎㅎ, createdAt=2024-11-29 17:31:25, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=73, contents=ㅋㅋㅋ, location=ㅋㅋ, createdAt=2024-11-29 17:22:01, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=72, contents=ㅋㅋㅋㅋ, location=ㅋㅋ, createdAt=2024-11-29 17:07:11, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=71, contents=I am panguin, location=남극, createdAt=2024-11-29 16:55:58, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=70, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:27, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=69, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:18, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=68, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:12, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=67, contents=h, location=h, createdAt=2024-11-29 16:40:39, writerUserId=10, writerNm=h, writerPic=9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=66, contents=h, location=h, createdAt=2024-11-29 16:39:48, writerUserId=10, writerNm=h, writerPic=9dfd108a-fe8a-4937-b430-fdb5b4d6c929.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=64, contents=바보, location=헤헷, createdAt=2024-11-29 16:39:36, writerUserId=9, writerNm=asd, writerPic=0cc36dd6-7730-414b-874f-35d7e1b3f138.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 84
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6495b107-f128-4f66-8d42-37f7e0d0dc92.PNG |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 84
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 83
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29edf419-b3db-4850-bd7f-4b97fd683d26.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 83
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 82
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b65a27e4-c8dd-4845-af4c-914fa030b42d.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 82
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|42              |zzz     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|58f5394e-34fc-4ede-8bd1-d15169d46d95.webp |
|------------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 81
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0a94db56-a4ed-42a7-b482-38647c629c01.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 80
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|6da59fed-e619-4ad3-88a8-e4bba28735dd.jfif |
|------------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 79
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d3d78d23-0d9c-4593-abbe-df5c3e1c5016.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 78
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7ae4e1f3-f035-4628-bb6c-3c4f917017ac.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 77
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ed35ba5a-cb56-4378-b6f5-610fc218efc0.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 76
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|18d86657-b95d-4fd9-9a39-5b4f08886a28.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 75
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|083cc6cf-a3aa-429b-87b1-78223acb1d93.webp |
|------------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 74
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d2ea6873-d45a-408e-a0dc-1fa3bcb2c3b5.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 73
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd5c3dc3-9193-4e8e-848b-cf19d8863f36.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 72
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|64d3ccb0-ab6a-4901-b54d-8ef06331068b.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3c519ef-1d13-4845-a332-04654dc3c74c.png |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|06c9bc59-a00f-4c35-b342-10e35fc755fe.gif |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 69
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|44cb2df1-1227-4291-a68a-7a4256313644.png |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e71a614f-755f-4ad9-a0ec-ed4edb5846b2.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 67
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9405441e-5d30-4f64-998e-291bbb468f98.jpg |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 66
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a6ceef74-6e17-439b-ade3-e9ba9063d102.gif |
|-----------------------------------------|

[2024-12-11 14:24:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 64
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:24:55 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:24:59 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=5, size=20, startIdx=80), signedUserId=2, profileUserId=null)
[2024-12-11 14:24:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 80, 20
 {executed in 1 msec}
[2024-12-11 14:24:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|-----------|---------------|---------|----|-------|
|feed_id |contents |location |created_at |writer_user_id |writernm |pic |islike |
|--------|---------|---------|-----------|---------------|---------|----|-------|
|--------|---------|---------|-----------|---------------|---------|----|-------|

[2024-12-11 14:24:59 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = []
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |0      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 4 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 14:25:21 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:21 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|193     |I am panguin  |남극       |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |0      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |0      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |0      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |0      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|193     |I am panguin  |남극       |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |0      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |0      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |0      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |0      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 1 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 14:25:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 14:25:59 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 14:26:09 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=199, userId=2, comment=ㅌㅌㅌ)
[2024-12-11 14:26:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_comment
        SET `feed_id` = 199
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌ'
 {executed in 0 msec}
[2024-12-11 14:26:09 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
21. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 199
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌ'
 {executed in 0 msec}
[2024-12-11 14:26:09 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|70        |
|----------|

[2024-12-11 14:26:19 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=199, userId=2, comment=ㅌㅌㅌ)
[2024-12-11 14:26:19 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_comment
        SET `feed_id` = 199
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌ'
 {executed in 2 msec}
[2024-12-11 14:26:19 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
21. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 199
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌ'
 {executed in 0 msec}
[2024-12-11 14:26:19 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|71        |
|----------|

[2024-12-11 14:26:24 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@3da78c53
[2024-12-11 14:26:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. DELETE FROM feed_like
        WHERE feed_id = 199 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 14:26:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_like
        SET feed_id = 199
        , user_id = 2
 {executed in 2 msec}
[2024-12-11 14:26:35 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=212, userId=2, comment=ㅌㅌㅌ)
[2024-12-11 14:26:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_comment
        SET `feed_id` = 212
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌ'
 {executed in 1 msec}
[2024-12-11 14:26:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
21. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 212
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌ'
 {executed in 0 msec}
[2024-12-11 14:26:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|72        |
|----------|

[2024-12-11 14:26:44 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@729eb962
[2024-12-11 14:26:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. DELETE FROM feed_like
        WHERE feed_id = 212 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 14:26:44 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_like
        SET feed_id = 212
        , user_id = 2
 {executed in 1 msec}
[2024-12-11 14:26:50 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=210, userId=2, comment=ㅌㅌㅌㅌㅌ)
[2024-12-11 14:26:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_comment
        SET `feed_id` = 210
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌㅌㅌ'
 {executed in 2 msec}
[2024-12-11 14:26:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
21. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 210
        , `user_id` = 2
        , `comment` = 'ㅌㅌㅌㅌㅌ'
 {executed in 0 msec}
[2024-12-11 14:26:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|73        |
|----------|

[2024-12-11 14:26:52 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@6d1c09ab
[2024-12-11 14:26:52 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. DELETE FROM feed_like
        WHERE feed_id = 210 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 14:26:52 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_like
        SET feed_id = 210
        , user_id = 2
 {executed in 2 msec}
[2024-12-11 14:29:42 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=190, userId=2, comment=류현욱 이 어린넘의쉐끼가)
[2024-12-11 14:29:42 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO feed_comment
        SET `feed_id` = 190
        , `user_id` = 2
        , `comment` = '류현욱 이 어린넘의쉐끼가'
 {executed in 3 msec}
[2024-12-11 14:29:42 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
21. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 190
        , `user_id` = 2
        , `comment` = '류현욱 이 어린넘의쉐끼가'
 {executed in 0 msec}
[2024-12-11 14:29:42 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|74        |
|----------|

[2024-12-11 15:41:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 7 class path changes (0 additions, 0 deletions, 7 modifications)
[2024-12-11 15:41:01 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 15:41:01 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 15:41:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 15:41:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 15:41:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 15:41:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 225 ms
[2024-12-11 15:41:02 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 15:41:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 15:41:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 15:41:02 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.404 seconds (process running for 9040.633)
[2024-12-11 15:41:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 15:52:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-11 15:52:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 15:52:01 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 15:52:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 15:52:01 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 226 ms
[2024-12-11 15:52:02 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 15:52:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 15:52:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 15:52:02 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.441 seconds (process running for 9700.593)
[2024-12-11 15:52:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 15:58:50 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 15:58:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 15:58:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 15:58:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 15:58:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 194 ms
[2024-12-11 15:58:50 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 15:58:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 15:58:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 15:58:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.365 seconds (process running for 10108.854)
[2024-12-11 15:58:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 15:59:25 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 15:59:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 15:59:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 15:59:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 15:59:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 175 ms
[2024-12-11 15:59:25 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 15:59:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 15:59:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 15:59:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.316 seconds (process running for 10144.215)
[2024-12-11 15:59:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 16:01:14 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 16:01:14 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:01:14 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:01:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:01:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 169 ms
[2024-12-11 16:01:14 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:01:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:01:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:01:14 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.309 seconds (process running for 10252.95)
[2024-12-11 16:01:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 16:20:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 16:20:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 16:20:25 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@1f642537
[2024-12-11 16:20:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-11 16:20:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2e8c7709
[2024-12-11 16:20:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-11 16:20:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. DELETE FROM feed_like
        WHERE feed_id = 184 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 16:20:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO feed_like
        SET feed_id = 184
        , user_id = 2
 {executed in 1 msec}
[2024-12-11 16:20:27 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@3d9a0e20
[2024-12-11 16:20:27 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. DELETE FROM feed_like
        WHERE feed_id = 185 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 16:20:27 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO feed_like
        SET feed_id = 185
        , user_id = 2
 {executed in 2 msec}
[2024-12-11 16:20:28 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@434fe796
[2024-12-11 16:20:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. DELETE FROM feed_like
        WHERE feed_id = 186 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 16:20:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO feed_like
        SET feed_id = 186
        , user_id = 2
 {executed in 1 msec}
[2024-12-11 16:20:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p : com.green.greengram.feed.like.model.FeedLikeReq@3ae8ffd1
[2024-12-11 16:20:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. DELETE FROM feed_like
        WHERE feed_id = 190 AND user_id = 2
 {executed in 0 msec}
[2024-12-11 16:20:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO feed_like
        SET feed_id = 190
        , user_id = 2
 {executed in 3 msec}
[2024-12-11 16:28:25 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 16:28:25 INFO Thread-23] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-11 16:28:25 INFO Thread-23] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-11 16:28:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:28:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:28:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:28:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 183 ms
[2024-12-11 16:28:26 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:28:26 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 16:28:26 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 50; columnNumber: 32; 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-11 16:30:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:30:23 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:30:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:30:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 169 ms
[2024-12-11 16:30:23 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:30:23 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 16:30:23 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 50; columnNumber: 32; 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-11 16:32:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:32:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:32:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:32:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 171 ms
[2024-12-11 16:32:00 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:32:00 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 16:32:00 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 62; columnNumber: 51; 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-11 16:33:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:33:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:33:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:33:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 177 ms
[2024-12-11 16:33:16 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:33:16 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 16:33:16 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 62; columnNumber: 51; 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-11 16:36:48 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:36:48 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:36:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:36:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 171 ms
[2024-12-11 16:36:49 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:36:49 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 16:36:49 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 62; columnNumber: 51; 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-11 16:39:31 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:39:31 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:39:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:39:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 177 ms
[2024-12-11 16:39:31 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:39:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:39:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:39:31 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.327 seconds (process running for 12550.275)
[2024-12-11 16:39:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 16:41:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 16:41:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 16:41:42 INFO http-nio-8080-exec-1] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 16:41:48 INFO http-nio-8080-exec-6] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 16:41:48 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Starting...
[2024-12-11 16:41:48 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7460b037
[2024-12-11 16:41:48 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Start completed.
[2024-12-11 16:41:48 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:48 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$sk4626tvzGiUM1D4IySfKurbiHJIZQqd/NLA0El48eRbRb0N5gBG2'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:49 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:50 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:50 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$NwRnGOWUfBmTJhWfisgo2.BsGnyU0Hq59rNzi3mJVNRrStMAcNg8.'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:50 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$JAiwpmakGLzUv.jznvUMP.16PXnNu4jn2056Hm64XM/TeVxZQWRcu'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 WARN http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$O9e6Cg3ACBD977LGd5VT.uDmxn3CfBkNzHS/kpCVm.8hMQ131ENAy'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$n9GceayZ5jKTrmVSqz98luGFD.r7d4PlxTcdZtGzCJQPl1oZHCdyK'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$LB3HDaiB7pCAFxfZmTerw.JDAQ.XuFviC02YSF2TZl9IoP7cFBbbq'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$cFeSeEoM.kZro6b0WzvTgeP5fz8dWJADoMkEsdApr0.T/AWQ7491.'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 6 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$ZwA7UkktO3tZgCeF97frnOlPS7DJhEYg6NvdSKcbRvIjmg0K76MWO'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:51 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:52 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:52 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$45vwduSAS9p/b1hlL1R9CutnM4fZ0qTMDtxexjrcZWxsSPT9eEqvG'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:52 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:52 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:52 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$jEFYUENuaAHRQ5GANeKMxODI3tEE1vn3yOUHe6DmX9pFr2gRcsAOW'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:52 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:52 INFO http-nio-8080-exec-6] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 16:41:52 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 16:41:52 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$y1hm/bsRvtqOvDYCe./pDefL6el.Mj8tkItzkzPLsbr8wYEobUFA6'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:52 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat-5].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
; (conn=114) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=114) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy10/jdk.proxy10.$Proxy143.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:41:54 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 16:41:54 INFO Thread-27] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown initiated...
[2024-12-11 16:41:54 INFO Thread-27] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown completed.
[2024-12-11 16:41:54 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:41:54 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:41:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:41:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 174 ms
[2024-12-11 16:41:54 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:41:54 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:41:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:41:54 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.315 seconds (process running for 12692.838)
[2024-12-11 16:41:54 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 16:42:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 16:42:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1028 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:42:52 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:42:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:42:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 175 ms
[2024-12-11 16:42:53 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:42:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:42:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:42:53 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.309 seconds (process running for 12751.655)
[2024-12-11 16:42:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 16:50:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 2140 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:50:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:50:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 16:50:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 16:50:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:50:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-11 16:50:40 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:50:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:50:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:50:40 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.874 seconds (process running for 2.265)
[2024-12-11 16:50:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 16:50:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@695bbe88
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=1, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|69              |ㄱㄱㄱㄱㅈㅅ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 1 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |ㅌㅌㅌㅌㅌ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:50:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:50:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:54 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=232, startIdx=3, size=21)
[2024-12-11 16:50:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-11 16:50:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|64              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:50:56 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=64, userId=2)
[2024-12-11 16:50:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 64
        AND user_id = 2
 {executed in 2 msec}
[2024-12-11 16:51:01 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=69, userId=2)
[2024-12-11 16:51:01 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 69
        AND user_id = 2
 {executed in 2 msec}
[2024-12-11 16:51:04 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=ㅌㄴㅇㅇㅇㅇ)
[2024-12-11 16:51:04 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㅌㄴㅇㅇㅇㅇ'
 {executed in 2 msec}
[2024-12-11 16:51:04 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㅌㄴㅇㅇㅇㅇ'
 {executed in 1 msec}
[2024-12-11 16:51:04 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|75        |
|----------|

[2024-12-11 16:51:11 INFO http-nio-8080-exec-8] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=230, userId=2, comment=ㅇㅇㅇㅇ)
[2024-12-11 16:51:11 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 230
        , `user_id` = 2
        , `comment` = 'ㅇㅇㅇㅇ'
 {executed in 2 msec}
[2024-12-11 16:51:11 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 230
        , `user_id` = 2
        , `comment` = 'ㅇㅇㅇㅇ'
 {executed in 0 msec}
[2024-12-11 16:51:11 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|76        |
|----------|

[2024-12-11 16:51:13 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=76, userId=2)
[2024-12-11 16:51:13 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 76
        AND user_id = 2
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|193     |I am panguin  |남극       |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |1      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |1      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |1      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |1      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment       |user_id |writernm |pic                                      |
|----------------|--------------|--------|---------|-----------------------------------------|
|74              |류현욱 이 어린넘의쉐끼가 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|193     |I am panguin  |남극       |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |1      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |1      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |1      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |1      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment       |user_id |writernm |pic                                      |
|----------------|--------------|--------|---------|-----------------------------------------|
|74              |류현욱 이 어린넘의쉐끼가 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 16:51:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 16:51:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:43 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=2)
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 2;
 {executed in 0 msec}
[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |2024-11-29 12:30:29 |쩡미깜띠기ㅎㅎㅎ |0        |2         |9         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ  |헤헤헤헤헤    |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff   |ffff     |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf    |fff      |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz      |zzz      |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss      |aaaa     |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg    |gd       |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg      |gg       |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd     |dddd     |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz      |zz       |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null)]
[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|75              |ㅌㄴㅇㅇㅇㅇ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 1 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 1 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:51:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:51:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:51:47 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=228, userId=2, comment=ㅇㅇㅇㅇㅇ)
[2024-12-11 16:51:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 228
        , `user_id` = 2
        , `comment` = 'ㅇㅇㅇㅇㅇ'
 {executed in 1 msec}
[2024-12-11 16:51:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 228
        , `user_id` = 2
        , `comment` = 'ㅇㅇㅇㅇㅇ'
 {executed in 0 msec}
[2024-12-11 16:51:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|77        |
|----------|

[2024-12-11 16:52:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 16:52:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 16:52:37 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11496 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:52:37 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:52:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 16:52:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 16:52:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:52:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 808 ms
[2024-12-11 16:52:38 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:52:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:52:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:52:38 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.803 seconds (process running for 2.16)
[2024-12-11 16:52:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 16:52:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60a58c60
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd             |dddd            |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=1, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|75              |ㅌㄴㅇㅇㅇㅇ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|77              |ㅇㅇㅇㅇㅇ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 15 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |ㅌㅌㅌㅌㅌ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 1 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:52:46 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:52:46 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:50 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=232, startIdx=3, size=21)
[2024-12-11 16:52:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-11 16:52:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:52:53 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=ㄴㄴㄴㄴ)
[2024-12-11 16:52:53 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㄴㄴㄴㄴ'
 {executed in 3 msec}
[2024-12-11 16:52:53 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㄴㄴㄴㄴ'
 {executed in 0 msec}
[2024-12-11 16:52:53 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|78        |
|----------|

[2024-12-11 16:53:08 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=2)
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=2)
[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 2;
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |2024-11-29 12:30:29 |쩡미깜띠기ㅎㅎㅎ |0        |2         |9         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ  |헤헤헤헤헤    |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|231     |ffffff   |ffff     |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|230     |fgfgf    |fff      |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |1      |
|229     |zzz      |zzz      |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|228     |sss      |aaaa     |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|227     |dgggg    |gd       |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|226     |ggg      |gg       |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|224     |dddd     |dddd     |2024-12-10 09:43:32 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|222     |zzz      |zz       |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |0      |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=224, contents=dddd, location=dddd, createdAt=2024-12-10 09:43:32, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=8a3ac425-fc9d-4212-8c59-13f389543ea2.gif, isLike=0, pics=null, comment=null)]
[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|78              |ㄴㄴㄴㄴ    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|75              |ㅌㄴㅇㅇㅇㅇ  |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|77              |ㅇㅇㅇㅇㅇ   |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 1 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|010a28d6-2f85-407c-b6d8-95838f5fced2.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 224
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:53:08 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:08 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |8a3ac425-fc9d-4212-8c59-13f389543ea2.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:16 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: FeedDelReq(feedId=224)
[2024-12-11 16:53:16 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 224
 {executed in 0 msec}
[2024-12-11 16:53:25 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserControlloer > patchProfilePic > p : UserPicPatchReq(signedUserId=2, pic=null, picName=null)
[2024-12-11 16:53:25 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = NULL
        where user_id = 2
 {executed in 0 msec}
[2024-12-11 16:53:29 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserControlloer > patchProfilePic > p : UserPicPatchReq(signedUserId=2, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7b961691, picName=null)
[2024-12-11 16:53:29 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = '259879ba-b7b1-46a5-b201-248c7ac24657.png'
        where user_id = 2
 {executed in 0 msec}
[2024-12-11 16:53:48 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserControlloer > patchProfilePic > p : UserPicPatchReq(signedUserId=2, pic=null, picName=null)
[2024-12-11 16:53:48 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = NULL
        where user_id = 2
 {executed in 0 msec}
[2024-12-11 16:53:55 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserControlloer > patchProfilePic > p : UserPicPatchReq(signedUserId=2, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4e9a322f, picName=null)
[2024-12-11 16:53:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
        SET pic = '00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif'
        where user_id = 2
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|193     |I am panguin     |남극              |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=1, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 1 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|78              |ㄴㄴㄴㄴ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|75              |ㅌㄴㅇㅇㅇㅇ  |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|77              |ㅇㅇㅇㅇㅇ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 2 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 10 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 1 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |ㅌㅌㅌㅌㅌ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:53:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:53:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:54:05 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=11)
[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=11)
[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 11

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 11;
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|194     |냐옹~ 힐링하라냥    |따뜻한 안방   |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|114     |i am panguin |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:54:05 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|11      |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |2024-12-02 16:41:42 |괴도그린     |0        |0         |2         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=11)
[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 11

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|194     |냐옹~ 힐링하라냥    |따뜻한 안방   |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|114     |i am panguin |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 1 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 16:54:05 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:54:05 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 16:54:06 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFolowController > postUserFollow > p:UserFollowReq(fromUserId=2, toUserId=11, message=null)
[2024-12-11 16:54:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET to_user_id = 11
        , from_user_id = 2
 {executed in 0 msec}
[2024-12-11 16:55:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 16:55:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 16:55:06 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11504 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:55:06 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:55:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 16:55:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 16:55:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:55:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 809 ms
[2024-12-11 16:55:07 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:55:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:55:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:55:08 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.699 seconds (process running for 2.054)
[2024-12-11 16:55:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 16:55:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@20f60609
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|193     |I am panguin     |남극              |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=1, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|78              |ㄴㄴㄴㄴ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|75              |ㅌㄴㅇㅇㅇㅇ  |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|77              |ㅇㅇㅇㅇㅇ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |ㅌㅌㅌㅌㅌ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 1 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:55:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:18 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=232, startIdx=3, size=21)
[2024-12-11 16:55:18 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 3, 21
 {executed in 0 msec}
[2024-12-11 16:55:18 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:22 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: FeedCommentPostReq(feedCommentId=0, feedId=232, userId=2, comment=ㅁㅁㅁㅁ)
[2024-12-11 16:55:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㅁㅁㅁㅁ'
 {executed in 1 msec}
[2024-12-11 16:55:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
        SET `feed_id` = 232
        , `user_id` = 2
        , `comment` = 'ㅁㅁㅁㅁ'
 {executed in 0 msec}
[2024-12-11 16:55:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|79        |
|----------|

[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 2 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |1      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |1      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |1      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |1      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|84      |ㅠㅠ            |ㅠ        |2024-11-29 18:47:44 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=84, contents=ㅠㅠ, location=ㅠ, createdAt=2024-11-29 18:47:44, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 1 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment       |user_id |writernm |pic                                      |
|----------------|--------------|--------|---------|-----------------------------------------|
|74              |류현욱 이 어린넘의쉐끼가 |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 0 msec}
[2024-12-11 16:55:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 16:55:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 84
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6495b107-f128-4f66-8d42-37f7e0d0dc92.PNG |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 84
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=null)
[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents      |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|192     |              |나는 이정민   |2024-12-02 17:48:09 |12             |123      |null                                     |0      |
|191     |              |내 이름은    |2024-12-02 17:47:56 |12             |123      |null                                     |0      |
|190     |              |나는 이정민   |2024-12-02 17:47:47 |12             |123      |null                                     |1      |
|189     |I am panguin  |남극       |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin  |남극       |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|187     |GPT한테 무시 당하는중 |         |2024-12-02 17:44:06 |12             |123      |null                                     |0      |
|186     |q             |q        |2024-12-02 17:43:50 |12             |123      |null                                     |1      |
|185     |dd            |dd       |2024-12-02 17:43:40 |12             |123      |null                                     |1      |
|184     |you           |502호     |2024-12-02 17:40:45 |12             |123      |null                                     |1      |
|183     |I am panguin  |남극       |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|182     |              |사랑해요 감스트 |2024-12-02 17:37:56 |12             |123      |null                                     |0      |
|181     |              |꾸익       |2024-12-02 17:37:40 |12             |123      |null                                     |0      |
|180     |              |살려줭      |2024-12-02 17:35:11 |12             |123      |null                                     |0      |
|178     |이정민           |내 이름은    |2024-12-02 17:33:31 |12             |123      |null                                     |0      |
|114     |i am panguin  |남극       |2024-12-02 16:42:06 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|88      |ㅃㅃ            |ㅃㅃ       |2024-11-29 19:02:07 |4              |미니미      |null                                     |0      |
|87      |ㅃ             |ㅂ        |2024-11-29 18:59:06 |4              |미니미      |null                                     |0      |
|86      |ㅍㅍ            |ㅍ        |2024-11-29 18:57:36 |4              |미니미      |null                                     |0      |
|85      |ㅕㅕㅕㅕ          |ㅕㅕㅕ      |2024-11-29 18:51:46 |4              |미니미      |null                                     |0      |
|84      |ㅠㅠ            |ㅠ        |2024-11-29 18:47:44 |4              |미니미      |null                                     |0      |
|--------|--------------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=192, contents=, location=나는 이정민, createdAt=2024-12-02 17:48:09, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=191, contents=, location=내 이름은, createdAt=2024-12-02 17:47:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=190, contents=, location=나는 이정민, createdAt=2024-12-02 17:47:47, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=187, contents=GPT한테 무시 당하는중, location=, createdAt=2024-12-02 17:44:06, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=186, contents=q, location=q, createdAt=2024-12-02 17:43:50, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=185, contents=dd, location=dd, createdAt=2024-12-02 17:43:40, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=184, contents=you, location=502호, createdAt=2024-12-02 17:40:45, writerUserId=12, writerNm=123, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=182, contents=, location=사랑해요 감스트, createdAt=2024-12-02 17:37:56, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=181, contents=, location=꾸익, createdAt=2024-12-02 17:37:40, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=180, contents=, location=살려줭, createdAt=2024-12-02 17:35:11, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=178, contents=이정민, location=내 이름은, createdAt=2024-12-02 17:33:31, writerUserId=12, writerNm=123, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=114, contents=i am panguin, location=남극, createdAt=2024-12-02 16:42:06, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=88, contents=ㅃㅃ, location=ㅃㅃ, createdAt=2024-11-29 19:02:07, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=87, contents=ㅃ, location=ㅂ, createdAt=2024-11-29 18:59:06, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=86, contents=ㅍㅍ, location=ㅍ, createdAt=2024-11-29 18:57:36, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=85, contents=ㅕㅕㅕㅕ, location=ㅕㅕㅕ, createdAt=2024-11-29 18:51:46, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=84, contents=ㅠㅠ, location=ㅠ, createdAt=2024-11-29 18:47:44, writerUserId=4, writerNm=미니미, writerPic=null, isLike=0, pics=null, comment=null)]
[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 192
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1057a02-d99b-4cbe-88bd-995c369a0454.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 192
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|---------|----|
|feed_comment_id |comment   |user_id |writernm |pic |
|----------------|----------|--------|---------|----|
|16              |류현욱 죽는다진짜 |4       |미니미      |null|
|----------------|----------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 191
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|cc9b9bef-d523-497f-bd48-012009a6a871.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 191
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 190
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07612adf-d59d-48b6-af25-7c7c77ab670a.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 190
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment       |user_id |writernm |pic                                      |
|----------------|--------------|--------|---------|-----------------------------------------|
|74              |류현욱 이 어린넘의쉐끼가 |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 187
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a746533-473b-4329-bc42-ace5d9b4916d.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 187
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 186
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|83921a65-3780-42de-9b81-3fc6906be80a.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 186
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 185
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b09ed734-8a92-4dda-bf85-9bb08fc96784.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 185
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 184
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ccc31adb-d5c1-4d84-859c-970970b9ed4f.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 184
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 182
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66e31795-7d27-470a-bbe4-faff796445c7.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 182
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 181
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|eccedc53-fe1f-41f9-8d06-c118b0882337.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 181
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 180
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|17df4683-698f-499f-80f8-2e0076c5700d.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 180
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 178
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b436a244-aade-431d-b159-6971af8499f7.png |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 178
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 114
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 114
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|-------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment      |user_id |writernm |pic                                      |
|----------------|-------------|--------|---------|-----------------------------------------|
|17              |i am panguin |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|13              |ㅠㅠ           |4       |미니미      |null                                     |
|12              |bb           |4       |미니미      |null                                     |
|11              |zz           |4       |미니미      |null                                     |
|----------------|-------------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 88
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg |
|ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 88
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|48              |ㅏㅏㅏㅏ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|18              |다죽자     |4       |미니미      |null                                     |
|15              |다죽자     |4       |미니미      |null                                     |
|14              |다죽자     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 87
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|42b401f3-1798-4010-8486-a678a156e349.jpg  |
|6fe5563b-9a0e-48db-a772-5d40afa4bea9.webp |
|------------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 87
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 86
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|08350edd-b92b-482a-b1e6-6b28f83213be.jpg |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 86
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 85
 {executed in 1 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|29cd776b-75dc-4091-848d-8772aec75156.PNG |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 85
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|53              |ㅇㅇㅇㅇㅇㅇㅇㅇ |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 84
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6495b107-f128-4f66-8d42-37f7e0d0dc92.PNG |
|-----------------------------------------|

[2024-12-11 16:55:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 84
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=1)
[2024-12-11 16:55:32 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=1)
[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 1;
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents       |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|---------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|199     |Sample Content |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|193     |I am panguin   |남극              |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|189     |I am panguin   |남극              |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin   |남극              |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|183     |I am panguin   |남극              |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|71      |I am panguin   |남극              |2024-11-29 16:55:58 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|70      |자~             |드가자~            |2024-11-29 16:41:27 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|69      |자~             |드가자~            |2024-11-29 16:41:18 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|68      |자~             |드가자~            |2024-11-29 16:41:12 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|57      |김우준            |김우준             |2024-11-29 16:21:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|12      |죽어버려           |죽음과삶...         |2024-11-29 15:15:52 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|11      |hahaha         |null            |2024-11-29 14:43:53 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|10      |hello          |502             |2024-11-29 14:12:18 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|9       |돼지             |돼지마을            |2024-11-29 11:31:14 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|8       |메롱메롱메롱메롱       |미쿡              |2024-11-29 10:56:02 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|5       |메롱             |2번이보냄           |2024-11-29 10:54:36 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|4       |죽어버려           |죽음과삶            |2024-11-29 10:46:56 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|3       |죽어버려           |죽음과삶            |2024-11-29 10:40:47 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|1       |1234           |aa              |2024-11-28 16:56:39 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|--------|---------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=71, contents=I am panguin, location=남극, createdAt=2024-11-29 16:55:58, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=70, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:27, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=69, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:18, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=68, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:12, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=57, contents=김우준, location=김우준, createdAt=2024-11-29 16:21:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=12, contents=죽어버려, location=죽음과삶..., createdAt=2024-11-29 15:15:52, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=11, contents=hahaha, location=null, createdAt=2024-11-29 14:43:53, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=10, contents=hello, location=502, createdAt=2024-11-29 14:12:18, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=9, contents=돼지, location=돼지마을, createdAt=2024-11-29 11:31:14, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=8, contents=메롱메롱메롱메롱, location=미쿡, createdAt=2024-11-29 10:56:02, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=5, contents=메롱, location=2번이보냄, createdAt=2024-11-29 10:54:36, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=4, contents=죽어버려, location=죽음과삶, createdAt=2024-11-29 10:46:56, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=3, contents=죽어버려, location=죽음과삶, createdAt=2024-11-29 10:40:47, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=1, contents=1234, location=aa, createdAt=2024-11-28 16:56:39, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:55:32 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |2024-11-28 13:47:14 |aa       |2        |1         |19        |7               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|64d3ccb0-ab6a-4901-b54d-8ef06331068b.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3c519ef-1d13-4845-a332-04654dc3c74c.png |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|06c9bc59-a00f-4c35-b342-10e35fc755fe.gif |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 69
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|44cb2df1-1227-4291-a68a-7a4256313644.png |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d125d92f-dcfa-471e-a754-6a856a160f34.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 12
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|28d4fa14-12e1-4945-a105-4f98e813d0f8.webp |
|801f1c57-8da2-424f-85f4-98100503f2e9.jpg  |
|------------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07a7ab0d-b3cb-4e82-9bf3-6c23d72eddd2.jpg |
|09d3b028-6ff0-4ecf-822b-ec6fed687048.jpg |
|28531928-f711-44da-a5eb-75d77b1a0439.jpg |
|4e039783-c009-4564-b7ed-fd38884ae5b6.jpg |
|51ff3576-c9c9-44a2-bc09-57fdfd1e0e80.jpg |
|6317a2c0-49ef-4da1-bb14-61a92a2a9979.jpg |
|85998c9d-70a5-4b6c-b5dd-c5a98d53dcad.jpg |
|8788e7ec-f4b6-4a18-b8c6-14a55051e862.jpg |
|c7f487e2-e570-458d-a6d4-54e0bc2294b5.jpg |
|ce711880-ceff-4c73-b7ba-e9228351c914.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 8
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|80119c9e-6d19-4cea-9adf-7726f3858de9.jpg |
|8861102c-539e-4f4b-82af-4b9320fe09e1.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 8
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|63412fe7-0f6c-4ea9-829b-15bad4a2ffc8.jpg  |
|73481241-8311-4c28-92ce-3b77a570c36e.jpg  |
|81a4e091-1fa3-40f1-b7bd-5dcc5de01afc.webp |
|a7127262-7923-41be-8b9a-5caf644260ea.jpg  |
|------------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8c44d44c-6b93-4aae-bca7-4b7eacae9f2b.jpg |
|fcf6f874-6447-4fb1-b1a7-84a0b263d915.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=1)
[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 1

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents       |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|---------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|199     |Sample Content |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|193     |I am panguin   |남극              |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|189     |I am panguin   |남극              |2024-12-02 17:44:46 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|188     |I am panguin   |남극              |2024-12-02 17:44:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|183     |I am panguin   |남극              |2024-12-02 17:39:06 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|71      |I am panguin   |남극              |2024-11-29 16:55:58 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|70      |자~             |드가자~            |2024-11-29 16:41:27 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|69      |자~             |드가자~            |2024-11-29 16:41:18 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|68      |자~             |드가자~            |2024-11-29 16:41:12 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|57      |김우준            |김우준             |2024-11-29 16:21:15 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|12      |죽어버려           |죽음과삶...         |2024-11-29 15:15:52 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|11      |hahaha         |null            |2024-11-29 14:43:53 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|10      |hello          |502             |2024-11-29 14:12:18 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|9       |돼지             |돼지마을            |2024-11-29 11:31:14 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|8       |메롱메롱메롱메롱       |미쿡              |2024-11-29 10:56:02 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|5       |메롱             |2번이보냄           |2024-11-29 10:54:36 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|4       |죽어버려           |죽음과삶            |2024-11-29 10:46:56 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|3       |죽어버려           |죽음과삶            |2024-11-29 10:40:47 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|1       |1234           |aa              |2024-11-28 16:56:39 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|--------|---------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=189, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:46, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=188, contents=I am panguin, location=남극, createdAt=2024-12-02 17:44:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=183, contents=I am panguin, location=남극, createdAt=2024-12-02 17:39:06, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=71, contents=I am panguin, location=남극, createdAt=2024-11-29 16:55:58, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=70, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:27, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=69, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:18, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=68, contents=자~, location=드가자~, createdAt=2024-11-29 16:41:12, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=57, contents=김우준, location=김우준, createdAt=2024-11-29 16:21:15, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=12, contents=죽어버려, location=죽음과삶..., createdAt=2024-11-29 15:15:52, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=11, contents=hahaha, location=null, createdAt=2024-11-29 14:43:53, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=10, contents=hello, location=502, createdAt=2024-11-29 14:12:18, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=9, contents=돼지, location=돼지마을, createdAt=2024-11-29 11:31:14, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=8, contents=메롱메롱메롱메롱, location=미쿡, createdAt=2024-11-29 10:56:02, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=5, contents=메롱, location=2번이보냄, createdAt=2024-11-29 10:54:36, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=4, contents=죽어버려, location=죽음과삶, createdAt=2024-11-29 10:46:56, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=3, contents=죽어버려, location=죽음과삶, createdAt=2024-11-29 10:40:47, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=1, contents=1234, location=aa, createdAt=2024-11-28 16:56:39, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 189
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|358db68c-33c4-4eaa-9c32-89105865dd8d.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 189
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 188
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b302f897-03fb-4e16-bf2d-0d3d92530066.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 188
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 183
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7a35e1c9-13c0-4f1c-a12c-5d05d43b70d5.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 183
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|64d3ccb0-ab6a-4901-b54d-8ef06331068b.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 71
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a3c519ef-1d13-4845-a332-04654dc3c74c.png |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 70
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|06c9bc59-a00f-4c35-b342-10e35fc755fe.gif |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 69
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|44cb2df1-1227-4291-a68a-7a4256313644.png |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 68
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d125d92f-dcfa-471e-a754-6a856a160f34.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 57
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 12
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|28d4fa14-12e1-4945-a105-4f98e813d0f8.webp |
|801f1c57-8da2-424f-85f4-98100503f2e9.jpg  |
|------------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 10
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|07a7ab0d-b3cb-4e82-9bf3-6c23d72eddd2.jpg |
|09d3b028-6ff0-4ecf-822b-ec6fed687048.jpg |
|28531928-f711-44da-a5eb-75d77b1a0439.jpg |
|4e039783-c009-4564-b7ed-fd38884ae5b6.jpg |
|51ff3576-c9c9-44a2-bc09-57fdfd1e0e80.jpg |
|6317a2c0-49ef-4da1-bb14-61a92a2a9979.jpg |
|85998c9d-70a5-4b6c-b5dd-c5a98d53dcad.jpg |
|8788e7ec-f4b6-4a18-b8c6-14a55051e862.jpg |
|c7f487e2-e570-458d-a6d4-54e0bc2294b5.jpg |
|ce711880-ceff-4c73-b7ba-e9228351c914.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 9
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|80119c9e-6d19-4cea-9adf-7726f3858de9.jpg |
|8861102c-539e-4f4b-82af-4b9320fe09e1.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 8
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|63412fe7-0f6c-4ea9-829b-15bad4a2ffc8.jpg  |
|73481241-8311-4c28-92ce-3b77a570c36e.jpg  |
|81a4e091-1fa3-40f1-b7bd-5dcc5de01afc.webp |
|a7127262-7923-41be-8b9a-5caf644260ea.jpg  |
|------------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 5
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8c44d44c-6b93-4aae-bca7-4b7eacae9f2b.jpg |
|fcf6f874-6447-4fb1-b1a7-84a0b263d915.jpg |
|-----------------------------------------|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:55:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:55:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:55:33 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFolowController > postUserFollow > p:UserFollowReq(fromUserId=2, toUserId=1, message=null)
[2024-12-11 16:55:33 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET to_user_id = 1
        , from_user_id = 2
 {executed in 2 msec}
[2024-12-11 16:55:35 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFolowController > deleteUserFollow > p:UserFollowReq(fromUserId=2, toUserId=1, message=null)
[2024-12-11 16:55:35 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
    WHERE to_user_id = 1 AND from_user_id = 2
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|193     |I am panguin     |남극              |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] listTest = [FeedGetRes(feedId=232, contents=ㅎㅎㅎㅎㅎㅎㅎ, location=헤헤헤헤헤, createdAt=2024-12-10 10:55:19, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=231, contents=ffffff, location=ffff, createdAt=2024-12-10 10:54:13, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=230, contents=fgfgf, location=fff, createdAt=2024-12-10 10:53:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=1, pics=null, comment=null), FeedGetRes(feedId=229, contents=zzz, location=zzz, createdAt=2024-12-10 10:51:07, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=228, contents=sss, location=aaaa, createdAt=2024-12-10 10:50:00, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=227, contents=dgggg, location=gd, createdAt=2024-12-10 10:49:50, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=226, contents=ggg, location=gg, createdAt=2024-12-10 10:49:12, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=222, contents=zzz, location=zz, createdAt=2024-12-10 08:56:23, writerUserId=2, writerNm=쩡미깜띠기ㅎㅎㅎ, writerPic=00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif, isLike=0, pics=null, comment=null), FeedGetRes(feedId=217, contents=ㅋㅋㅋㅋ, location=ㅋㅋㅋ, createdAt=2024-12-06 09:37:27, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=216, contents=ㅍㅍㅍㅍ, location=ㅍㅍ, createdAt=2024-12-06 09:37:14, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=215, contents=ㅠㅠㅠㅠㅠㅠㅠㅠ, location=ㅠㅠ, createdAt=2024-12-06 09:35:19, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=214, contents=ㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇ, createdAt=2024-12-06 09:30:38, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=213, contents=ㅇㅁㄴㅇㅁㄴㅇ, location=ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ, createdAt=2024-12-06 09:29:56, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=212, contents=ㅁㄴㅇ, location=헤헤헤헤헤, createdAt=2024-12-06 09:26:39, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=1, pics=null, comment=null), FeedGetRes(feedId=211, contents=제발요, location=제발, createdAt=2024-12-06 09:23:17, writerUserId=33, writerNm=ㅜㅜ, writerPic=a6ace6db-926a-4045-a622-a28541e39ce3.png, isLike=0, pics=null, comment=null), FeedGetRes(feedId=210, contents=저능해...., location=꺄아~~~, createdAt=2024-12-06 08:54:15, writerUserId=4, writerNm=미니미, writerPic=null, isLike=1, pics=null, comment=null), FeedGetRes(feedId=199, contents=Sample Content, location=Sample Location, createdAt=2024-12-05 20:35:26, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=1, pics=null, comment=null), FeedGetRes(feedId=195, contents=피해자면은 그냥 가만히 계셔요, location=머니게임, createdAt=2024-12-03 16:32:05, writerUserId=8, writerNm=22, writerPic=null, isLike=0, pics=null, comment=null), FeedGetRes(feedId=194, contents=냐옹~ 힐링하라냥, location=따뜻한 안방, createdAt=2024-12-03 13:11:04, writerUserId=11, writerNm=괴도그린, writerPic=fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg, isLike=0, pics=null, comment=null), FeedGetRes(feedId=193, contents=I am panguin, location=남극, createdAt=2024-12-02 17:48:33, writerUserId=1, writerNm=aa, writerPic=a99bef24-b661-48eb-911a-99ab0ed2832a.jpg, isLike=0, pics=null, comment=null)]
[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 232
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 232
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|79              |ㅁㅁㅁㅁ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|78              |ㄴㄴㄴㄴ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|75              |ㅌㄴㅇㅇㅇㅇ  |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 231
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 231
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 230
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 230
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 229
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 229
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 228
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 228
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|77              |ㅇㅇㅇㅇㅇ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 227
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 227
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 226
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 226
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 222
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 222
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 217
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 217
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|51              |ㅇㅇㅇㅇㅇ   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 216
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|114415da-5b30-4851-9d33-681c52befb08.gif |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 216
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 215
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3496ae2b-1a05-4253-9339-50394d54d245.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 215
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 214
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 214
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 213
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 213
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 212
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 212
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|72              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 211
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 211
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|41              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|40              |ㅋㅋㅋㅋ    |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 210
 {executed in 4 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 210
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|73              |ㅌㅌㅌㅌㅌ   |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|44              |sssss   |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|43              |sss     |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|39              |ㅋㅋㅋ     |4       |미니미      |null                                     |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 199
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 199
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|71              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|70              |ㅌㅌㅌ     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 195
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 195
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|46              |죽어      |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 194
 {executed in 2 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 194
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|21              |냐옹~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|20              |냐오~     |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|19              |힐링 마렵다냥 |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 193
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|-----------------------------------------|

[2024-12-11 16:58:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 193
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-11 16:58:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|32              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|31              |ㅇㅇㅇㅇ    |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|26              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|24              |sss     |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-11 16:59:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 16:59:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 16:59:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4896 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 16:59:39 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 16:59:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 16:59:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 16:59:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 16:59:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 864 ms
[2024-12-11 16:59:40 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 16:59:41 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 16:59:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 16:59:41 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.784 seconds (process running for 2.124)
[2024-12-11 16:59:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 16:59:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 16:59:48 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-11 16:59:48 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 16:59:48 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60156c8
[2024-12-11 16:59:48 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 16:59:48 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 16:59:48 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|193     |I am panguin     |남극              |2024-12-02 17:48:33 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 16:59:48 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         , 
            193
         )
 {executed in 0 msec}
[2024-12-11 16:59:48 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|--------|-----------------------------------------|

[2024-12-11 16:59:48 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
[2024-12-11 16:59:48 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
        WHERE A.feed_id IN
         (  
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         , 
            193
         ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: (conn=154) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList4(FeedService.java:273)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList4(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList4(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 16:59:48 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=154) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.feed_comment_id,         A.comment,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,         U.pic AS writerPic         FROM feed_comment A         LEFT JOIN user U ON A.user_id = U.user_id         WHERE A.feed_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND C.feed_comment_id  <  A.feed_comment_id         )  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=154) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=154) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList4(FeedService.java:273)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList4(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList4(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:12:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:12:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:12:33 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5372 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:12:33 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:12:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:12:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:12:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:12:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 793 ms
[2024-12-11 17:12:33 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:12:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:12:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:12:34 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.891 seconds (process running for 2.337)
[2024-12-11 17:12:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:12:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 17:12:40 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:12:40 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.builder.BuilderException: The expression 'feedIds' evaluated to a null value.
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateIterable(ExpressionEvaluator.java:59)
	at org.apache.ibatis.scripting.xmltags.ForEachSqlNode.apply(ForEachSqlNode.java:71)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:296)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:15:20 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11848 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:15:20 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:15:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:15:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:15:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:15:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 968 ms
[2024-12-11 17:15:21 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:15:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:15:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:15:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.06 seconds (process running for 2.48)
[2024-12-11 17:15:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:15:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 17:15:28 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:15:28 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:15:28 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e41928f
[2024-12-11 17:15:28 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:15:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        MIN(P.pic) AS pic,
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        IF(L.feed_id IS NULL, 0, 1) AS isLike
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        AND L.user_id = 2
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 2 msec}
[2024-12-11 17:15:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----|--------|----------------|--------|---------|----|-------|
|feed_id |pic |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|----|--------|----------------|--------|---------|----|-------|
|--------|----|--------|----------------|--------|---------|----|-------|

[2024-12-11 17:17:20 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:17:20 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:17:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10768 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:17:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:17:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:17:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:17:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:17:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 949 ms
[2024-12-11 17:17:23 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:17:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:17:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:17:24 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.053 seconds (process running for 2.448)
[2024-12-11 17:17:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:17:32 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 17:17:32 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:17:32 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:17:32 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3f8d77f
[2024-12-11 17:17:32 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:17:32 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1054-42S22: Unknown column 'L.feed_comment_id' in 'on clause'
[2024-12-11 17:17:32 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        IF(L.feed_id IS NULL, 0, 1) AS isLike
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_comment_id = L.feed_comment_id
        AND L.user_id = 2
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: (conn=174) Unknown column 'L.feed_comment_id' in 'on clause'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:17:32 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=174) Unknown column 'L.feed_comment_id' in 'on clause'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.comment,         A.feed_comment_id,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,         U.pic AS writerPic,         IF(L.feed_id IS NULL, 0, 1) AS isLike         FROM feed_comment A         LEFT JOIN feed_comment C         ON A.feed_id = C.feed_id         AND A.feed_comment_id  <  C.feed_comment_id         LEFT JOIN user U         ON A.user_id = U.user_id         LEFT JOIN feed_like L         ON A.feed_comment_id = L.feed_comment_id         AND L.user_id = ?         WHERE A.feed_id IN          (               ?          )          GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic         HAVING COUNT(DISTINCT C.feed_comment_id)  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=174) Unknown column 'L.feed_comment_id' in 'on clause'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=174) Unknown column 'L.feed_comment_id' in 'on clause'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:20:04 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 17:20:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:20:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:20:04 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10768 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:20:04 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:20:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:20:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 215 ms
[2024-12-11 17:20:04 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:20:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:20:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:20:05 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.398 seconds (process running for 163.131)
[2024-12-11 17:20:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 17:21:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 3500 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:21:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:21:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:21:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:21:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:21:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 948 ms
[2024-12-11 17:21:17 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:21:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:21:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:21:18 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.025 seconds (process running for 2.429)
[2024-12-11 17:21:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:21:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 17:21:26 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:21:26 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:21:26 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@122730a5
[2024-12-11 17:21:26 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:21:26 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1054-42S22: Unknown column 'L.feed_comment_id' in 'on clause'
[2024-12-11 17:21:26 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(P.pic) AS pics, -- 모든 사진을 하나의 필드로 결합
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        IF(L.feed_id IS NULL, 0, 1) AS isLike
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_comment_id = L.feed_comment_id
        AND L.user_id = 2
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:21:26 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         GROUP_CONCAT(P.pic) AS pics, -- 모든 사진을 하나의 필드로 결합         A.comment,         A.feed_comment_id,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,         U.pic AS writerPic,         IF(L.feed_id IS NULL, 0, 1) AS isLike         FROM feed_comment A         LEFT JOIN feed_comment C         ON A.feed_id = C.feed_id         AND A.feed_comment_id  <  C.feed_comment_id         LEFT JOIN feed_pic P         ON A.feed_id = P.feed_id         LEFT JOIN user U         ON A.user_id = U.user_id         LEFT JOIN feed_like L         ON A.feed_comment_id = L.feed_comment_id         AND L.user_id = ?         WHERE A.feed_id IN          (               ?          )          GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic         HAVING COUNT(DISTINCT C.feed_comment_id)  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:21:31 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=2)
[2024-12-11 17:21:31 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=2, feedIds=null)
[2024-12-11 17:21:31 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1054-42S22: Unknown column 'L.feed_comment_id' in 'on clause'
[2024-12-11 17:21:31 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(P.pic) AS pics, -- 모든 사진을 하나의 필드로 결합
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        IF(L.feed_id IS NULL, 0, 1) AS isLike
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_comment_id = L.feed_comment_id
        AND L.user_id = 2
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:21:31 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         GROUP_CONCAT(P.pic) AS pics, -- 모든 사진을 하나의 필드로 결합         A.comment,         A.feed_comment_id,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,         U.pic AS writerPic,         IF(L.feed_id IS NULL, 0, 1) AS isLike         FROM feed_comment A         LEFT JOIN feed_comment C         ON A.feed_id = C.feed_id         AND A.feed_comment_id  <  C.feed_comment_id         LEFT JOIN feed_pic P         ON A.feed_id = P.feed_id         LEFT JOIN user U         ON A.user_id = U.user_id         LEFT JOIN feed_like L         ON A.feed_comment_id = L.feed_comment_id         AND L.user_id = ?         WHERE A.feed_id IN          (               ?          )          GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic         HAVING COUNT(DISTINCT C.feed_comment_id)  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=184) Unknown column 'L.feed_comment_id' in 'on clause'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:21:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 2;
 {executed in 1 msec}
[2024-12-11 17:21:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |2024-11-29 12:30:29 |쩡미깜띠기ㅎㅎㅎ |0        |3         |8         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 17:21:38 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > postFeed > pics size: 1
[2024-12-11 17:21:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 2
        , contents = 'ㄴㄴㄴㄴ'
        , location = 'ㄴㄴㄴ'
 {executed in 0 msec}
[2024-12-11 17:21:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 2
        , contents = 'ㄴㄴㄴㄴ'
        , location = 'ㄴㄴㄴ'
 {executed in 0 msec}
[2024-12-11 17:21:38 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|233       |
|----------|

[2024-12-11 17:21:38 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            233, '92898300-a3e2-4554-9532-4278613bbaa2.png'
         )
 {executed in 1 msec}
[2024-12-11 17:33:07 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-11 17:33:07 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:33:07 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:33:07 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 3500 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:33:07 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:33:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:33:08 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 200 ms
[2024-12-11 17:33:08 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:33:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:33:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:33:08 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.393 seconds (process running for 712.527)
[2024-12-11 17:33:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 17:36:12 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10740 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:36:12 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:36:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:36:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:36:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:36:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 806 ms
[2024-12-11 17:36:13 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:36:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:36:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:36:14 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.718 seconds (process running for 2.06)
[2024-12-11 17:36:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:36:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 17:36:19 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:36:19 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:36:19 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3f8d77f
[2024-12-11 17:36:19 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:36:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(P.pic) AS pics,
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        IF(L.feed_id IS NULL, 0, 1) AS isLike
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_comment_id = L.feed_id
        AND L.user_id = 2
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 17:36:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----|--------|----------------|--------|---------|----|-------|
|feed_id |pics |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|-----|--------|----------------|--------|---------|----|-------|
|--------|-----|--------|----------------|--------|---------|----|-------|

[2024-12-11 17:36:21 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=2, feedIds=null)
[2024-12-11 17:36:21 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(P.pic) AS pics,
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        IF(L.feed_id IS NULL, 0, 1) AS isLike
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_comment_id = L.feed_id
        AND L.user_id = 2
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 17:36:21 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=2)
[2024-12-11 17:36:21 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----|--------|----------------|--------|---------|----|-------|
|feed_id |pics |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|-----|--------|----------------|--------|---------|----|-------|
|--------|-----|--------|----------------|--------|---------|----|-------|

[2024-12-11 17:36:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 2;
 {executed in 1 msec}
[2024-12-11 17:36:21 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |2024-11-29 12:30:29 |쩡미깜띠기ㅎㅎㅎ |0        |3         |9         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 17:43:15 INFO http-nio-8080-exec-1] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 17:43:15 INFO http-nio-8080-exec-1] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 17:43:15 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:15 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$oHXUHHMnZoIQsWCxYhbCCuQwLwdn2FQPP2vd0mRnf5bGgUzdY15Oq'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 15 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:15 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:23 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:23 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$AhVMBkpDrHUV4WYqqmC7XewShRMuSxLKG8defAalBrdnvZU20VUoG'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:23 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:23 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:23 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$BFcrSDc1dTKAvCKxKJFpJug8RXabralZACLi6yUYJfwOgwwzeJBb2'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:23 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:23 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:23 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$1lkUDUsf5xUYFzxOQoocO.dD3i/zMRi/kNuAiI3MtVGUqoJPTKPE6'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:23 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 WARN http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$Lkskegf6UZlLiBnIrZABBOnitZKV7UbMJQIkSAwngIC7d1dJdo8zu'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 16 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$Fwb4kK6h2dymV1C2AsTOjeEZCfMRWYKyvrjd9CoxA7CMx7PyvQ40K'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$kWN2BJk0ZWKDGC/N8qWzOeZAJEOWBF2x/zcimdnYMdCsou.GjYOMO'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$4MG5AjUccNREY67v1h.se.fewwb2b3TI0lL/JfsXO4UYC6CYem77e'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$NGcByYn2KXGXBwZCm/vM4OudT7b.3fWJ0essgzUcdYsCa.fwynCXm'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$SXw.xNFaIliumSNTn3drLuk06PWwcdw3OjWEKtNZ0Drn9WvJH26qq'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:24 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$.VE0NfMi.j5BlI0cmy4OgeWg.r.AfD9ZEMoSoaeQub70RUQp9.4Wu'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 16 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$9it4Yvz9H3HYiBr4ah9JNexZR3yYe4IpC5ijrw79u1jhd7Y2IgBj6'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$37BOCVTl5yT30gVyeIi3tuIL7G55adK9FkcOWz3epnJJJNXKfIrdK'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 16 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 INFO http-nio-8080-exec-2] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 17:43:25 INFO http-nio-8080-exec-2] [com.green.greengram.common.IpLoggingFilter] Request from IPv4 address: 192.168.0.181
[2024-12-11 17:43:25 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$hGIgdgCCVop1mnsCfZUSuOozNwpZlbytFx8togDUTxpgdHNuonefi'
        , nick_name = 'a'
        , pic = NULL
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:43:25 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , nick_name = ?         , pic = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
; (conn=194) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=194) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.insUser(Unknown Source)
	at com.green.greengram.user.UserService.insUser(UserService.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.insUser(<generated>)
	at com.green.greengram.user.UserController.insUser(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 17:44:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:44:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:44:15 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11252 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:44:15 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:44:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:44:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:44:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:44:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 834 ms
[2024-12-11 17:44:16 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:44:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:44:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:44:16 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.76 seconds (process running for 2.123)
[2024-12-11 17:44:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:44:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 17:44:21 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:44:22 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:44:22 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@14d0f86e
[2024-12-11 17:44:22 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:44:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 17:44:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----|--------|----------------|--------|---------|----|-------|
|feed_id |pics |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|-----|--------|----------------|--------|---------|----|-------|
|--------|-----|--------|----------------|--------|---------|----|-------|

[2024-12-11 17:45:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:45:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:45:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1664 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:45:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:45:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:45:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:45:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:45:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-11 17:45:47 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:45:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:45:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:45:48 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.699 seconds (process running for 2.047)
[2024-12-11 17:45:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:45:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 17:45:56 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:45:56 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:45:56 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@35e8afa0
[2024-12-11 17:45:56 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:45:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 17:45:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----|--------|----------------|--------|---------|----|-------|
|feed_id |pics |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|-----|--------|----------------|--------|---------|----|-------|
|--------|-----|--------|----------------|--------|---------|----|-------|

[2024-12-11 17:53:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:53:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:57:49 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6812 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:57:49 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:57:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 17:57:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 17:57:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:57:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 803 ms
[2024-12-11 17:57:50 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:57:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:57:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:57:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.023 seconds (process running for 2.439)
[2024-12-11 17:57:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 17:57:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 17:57:58 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 17:57:58 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 17:57:58 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5afa9ef4
[2024-12-11 17:57:58 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 17:57:58 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 17:57:58 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----|--------|----------------|--------|---------|----|-------|
|feed_id |pics |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|-----|--------|----------------|--------|---------|----|-------|
|--------|-----|--------|----------------|--------|---------|----|-------|

[2024-12-11 17:59:21 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-11 17:59:21 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 17:59:21 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 17:59:21 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 6812 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 17:59:21 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 17:59:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 17:59:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 221 ms
[2024-12-11 17:59:22 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 17:59:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 17:59:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 17:59:22 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.382 seconds (process running for 93.925)
[2024-12-11 17:59:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 18:00:11 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 10496 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:00:11 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:00:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:00:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:00:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:00:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-11 18:00:12 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:00:12 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 18:00:12 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'FeedGetRes'.  Cause: java.lang.ClassNotFoundException: Cannot find class: FeedGetRes
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 85 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'FeedGetRes'.  Cause: java.lang.ClassNotFoundException: Cannot find class: FeedGetRes
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:103)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:105)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:143)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:125)
	... 87 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'FeedGetRes'.  Cause: java.lang.ClassNotFoundException: Cannot find class: FeedGetRes
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:128)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:132)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:101)
	... 91 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: FeedGetRes
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:226)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:103)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:322)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:124)
	... 93 common frames omitted
[2024-12-11 18:01:27 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4960 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:01:27 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:01:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:01:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:01:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:01:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 867 ms
[2024-12-11 18:01:28 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:01:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:01:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:01:29 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.757 seconds (process running for 2.091)
[2024-12-11 18:01:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 18:01:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 18:01:39 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 18:01:39 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.builder.BuilderException: The expression 'feedIds' evaluated to a null value.
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateIterable(ExpressionEvaluator.java:59)
	at org.apache.ibatis.scripting.xmltags.ForEachSqlNode.apply(ForEachSqlNode.java:71)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:284)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 18:01:58 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 2092 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:01:58 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:01:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:01:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:01:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:01:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 821 ms
[2024-12-11 18:01:59 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:01:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:01:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:01:59 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.768 seconds (process running for 2.144)
[2024-12-11 18:02:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 18:02:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 18:02:04 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 18:02:04 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 18:02:04 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2aa2868c
[2024-12-11 18:02:04 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 18:02:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        WHERE A.feed_id IN
         (  
            -1
         ) 
        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 18:02:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----|--------|----------------|--------|---------|----|-------|
|feed_id |pics |comment |feed_comment_id |user_id |writernm |pic |islike |
|--------|-----|--------|----------------|--------|---------|----|-------|
|--------|-----|--------|----------------|--------|---------|----|-------|

[2024-12-11 18:03:31 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 18:03:31 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 18:03:34 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1168 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:03:34 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:03:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:03:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:03:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:03:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 818 ms
[2024-12-11 18:03:35 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:03:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:03:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:03:35 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.711 seconds (process running for 2.109)
[2024-12-11 18:03:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 18:03:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 18:03:40 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 18:03:40 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 18:03:40 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1dc1136f
[2024-12-11 18:03:40 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 18:03:40 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 22
[2024-12-11 18:03:40 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        WHERE A.feed_id IN

        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 13 msec}
java.sql.SQLSyntaxErrorException: (conn=244) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 22
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:282)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 18:03:41 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=244) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 22
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록         A.comment,         A.feed_comment_id,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,         U.pic AS writerPic,         MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산         FROM feed_comment A         LEFT JOIN feed_comment C         ON A.feed_id = C.feed_id         AND A.feed_comment_id  <  C.feed_comment_id         LEFT JOIN feed_pic P         ON A.feed_id = P.feed_id         LEFT JOIN user U         ON A.user_id = U.user_id         LEFT JOIN feed_like L         ON A.feed_id = L.feed_id         WHERE A.feed_id IN                   GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic         HAVING COUNT(DISTINCT C.feed_comment_id)  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=244) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 22
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=244) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 22
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:282)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 18:04:26 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-11 18:04:26 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 18:04:26 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 18:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1168 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:04:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:04:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 208 ms
[2024-12-11 18:04:26 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:04:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:04:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:04:26 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.384 seconds (process running for 53.268)
[2024-12-11 18:04:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 18:04:55 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4620 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:04:55 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:04:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:04:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:04:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:04:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 797 ms
[2024-12-11 18:04:56 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:04:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:04:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:04:57 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.713 seconds (process running for 2.06)
[2024-12-11 18:05:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 18:05:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 18:05:03 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 18:05:03 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 18:05:03 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@528fb728
[2024-12-11 18:05:03 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 18:05:03 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 23
[2024-12-11 18:05:03 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id
        WHERE A.feed_id IN

        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=254) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 23
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:282)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 18:05:03 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=254) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 23
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록         A.comment,         A.feed_comment_id,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,         U.pic AS writerPic,         MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산         FROM feed_comment A         LEFT JOIN feed_comment C         ON A.feed_id = C.feed_id         AND A.feed_comment_id  <  C.feed_comment_id         LEFT JOIN feed_pic P         ON A.feed_id = P.feed_id         LEFT JOIN user U         ON A.user_id = U.user_id         LEFT JOIN feed_like L         ON A.feed_id = L.feed_id         WHERE A.feed_id IN                              GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic         HAVING COUNT(DISTINCT C.feed_comment_id)  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=254) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 23
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=254) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.u...' at line 23
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selectFeedCommentsWithLikes(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList5(FeedService.java:282)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList5(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList5(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 18:05:59 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-11 18:05:59 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 18:05:59 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 18:05:59 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4620 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:05:59 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:05:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:05:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 212 ms
[2024-12-11 18:05:59 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:06:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:06:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:06:00 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.387 seconds (process running for 65.027)
[2024-12-11 18:06:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-11 18:08:15 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11352 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:08:15 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:08:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:08:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:08:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:08:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 836 ms
[2024-12-11 18:08:16 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:08:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:08:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:08:17 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.781 seconds (process running for 2.144)
[2024-12-11 18:08:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 18:08:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 18:08:23 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 18:08:23 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 18:08:23 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3a25f3b4
[2024-12-11 18:08:23 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 18:08:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id

        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 1 msec}
[2024-12-11 18:08:23 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------------------------------------------------------------------------------------------------------------------------|--------------|----------------|--------|---------|-----------------------------------------|-------|
|feed_id |pics                                                                                                                       |comment       |feed_comment_id |user_id |writernm |pic                                      |islike |
|--------|---------------------------------------------------------------------------------------------------------------------------|--------------|----------------|--------|---------|-----------------------------------------|-------|
|55      |5d0de8ba-4cd1-4cab-bb8b-b489def1a2ff.jpg                                                                                   |너 디진다         |47              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|82      |b65a27e4-c8dd-4845-af4c-914fa030b42d.jpg                                                                                   |zzz           |42              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|85      |29cd776b-75dc-4091-848d-8772aec75156.PNG                                                                                   |ㅇㅇㅇㅇㅇㅇㅇㅇ      |53              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |ㅏㅏㅏㅏ          |48              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |다죽자           |18              |4       |미니미      |null                                     |0      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |다죽자           |15              |4       |미니미      |null                                     |0      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |다죽자           |14              |4       |미니미      |null                                     |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |i am panguin  |17              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |ㅠㅠ            |13              |4       |미니미      |null                                     |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |bb            |12              |4       |미니미      |null                                     |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |zz            |11              |4       |미니미      |null                                     |0      |
|190     |07612adf-d59d-48b6-af25-7c7c77ab670a.png                                                                                   |류현욱 이 어린넘의쉐끼가 |74              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|192     |b1057a02-d99b-4cbe-88bd-995c369a0454.png                                                                                   |류현욱 죽는다진짜     |16              |4       |미니미      |null                                     |0      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |ㅇㅇㅇㅇ          |32              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |ㅇㅇㅇㅇ          |31              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |sss           |26              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |sss           |24              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg                                                                                   |냐옹~           |21              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg                                                                                   |냐오~           |20              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg                                                                                   |힐링 마렵다냥       |19              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png                                                                                   |죽어            |46              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|199     |[null]                                                                                                                     |ㅌㅌㅌ           |71              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|199     |[null]                                                                                                                     |ㅌㅌㅌ           |70              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |ㅌㅌㅌㅌㅌ         |73              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |sssss         |44              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |sss           |43              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |ㅋㅋㅋ           |39              |4       |미니미      |null                                     |1      |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png                                                                                   |ㅋㅋㅋㅋ          |41              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png                                                                                   |ㅋㅋㅋㅋ          |40              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif                                                                                   |ㅌㅌㅌ           |72              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png                                                                                   |진짜 변태같이 그렸다   |63              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png,e3418cba-faa0-491a-994f-ca87e14a5def.gif,edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |ㅇㅇㅇㅇㅇ         |51              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png                                                                                   |dddd          |67              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png                                                                                   |ㅇㅇㅇㅇㅇ         |77              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㅁㅁㅁㅁ          |79              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㄴㄴㄴㄴ          |78              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㅌㄴㅇㅇㅇㅇ        |75              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㄱㄱㄱㄱㄱ         |68              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|--------|---------------------------------------------------------------------------------------------------------------------------|--------------|----------------|--------|---------|-----------------------------------------|-------|

[2024-12-11 18:09:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 18:09:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 18:09:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 12140 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:09:50 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:09:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:09:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:09:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:09:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 799 ms
[2024-12-11 18:09:51 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:09:51 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-11 18:09:51 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer3Application.main(GreenGramVer3Application.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\LJM\GreenGramVer3_2\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 61; columnNumber: 51; 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 콘텐츠는 올바른 형식의 문자 데이터 또는 마크업으로 구성되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2589)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2679)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-11 18:10:04 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 3380 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 18:10:04 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 18:10:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 18:10:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 18:10:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 18:10:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 828 ms
[2024-12-11 18:10:05 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 18:10:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 18:10:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 18:10:05 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.744 seconds (process running for 2.079)
[2024-12-11 19:34:24 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1584 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:34:24 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:34:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:34:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:34:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:34:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 834 ms
[2024-12-11 19:34:25 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:34:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:34:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:34:25 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.724 seconds (process running for 2.081)
[2024-12-11 19:37:20 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:37:20 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 19:37:20 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:37:20 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:37:20 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f5f990e
[2024-12-11 19:37:20 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:37:20 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        GROUP_CONCAT(DISTINCT P.pic) AS pics, -- 피드 사진 목록
        A.comment,
        A.feed_comment_id,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic,
        MAX(IF(L.feed_id IS NOT NULL, 1, 0)) AS isLike -- 좋아요 여부 계산
        FROM feed_comment A
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        AND A.feed_comment_id  <  C.feed_comment_id
        LEFT JOIN feed_pic P
        ON A.feed_id = P.feed_id
        LEFT JOIN user U
        ON A.user_id = U.user_id
        LEFT JOIN feed_like L
        ON A.feed_id = L.feed_id

        GROUP BY A.feed_id, A.feed_comment_id, A.comment, U.user_id, U.nick_name, U.uid, U.pic
        HAVING COUNT(DISTINCT C.feed_comment_id)  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {executed in 2 msec}
[2024-12-11 19:37:20 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------------------------------------------------------------------------------------------------------------------------|--------------|----------------|--------|---------|-----------------------------------------|-------|
|feed_id |pics                                                                                                                       |comment       |feed_comment_id |user_id |writernm |pic                                      |islike |
|--------|---------------------------------------------------------------------------------------------------------------------------|--------------|----------------|--------|---------|-----------------------------------------|-------|
|55      |5d0de8ba-4cd1-4cab-bb8b-b489def1a2ff.jpg                                                                                   |너 디진다         |47              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|82      |b65a27e4-c8dd-4845-af4c-914fa030b42d.jpg                                                                                   |zzz           |42              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|85      |29cd776b-75dc-4091-848d-8772aec75156.PNG                                                                                   |ㅇㅇㅇㅇㅇㅇㅇㅇ      |53              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |ㅏㅏㅏㅏ          |48              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |다죽자           |18              |4       |미니미      |null                                     |0      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |다죽자           |15              |4       |미니미      |null                                     |0      |
|88      |41bea2aa-c9bc-45a9-9916-276f2e2f5295.jpg,ae23166d-e44f-4dcf-b36f-5a4da7d6a030.jpg                                          |다죽자           |14              |4       |미니미      |null                                     |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |i am panguin  |17              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |ㅠㅠ            |13              |4       |미니미      |null                                     |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |bb            |12              |4       |미니미      |null                                     |0      |
|114     |edf25ffa-4174-4e11-85f2-08ae8ae2ce4a.jpg                                                                                   |zz            |11              |4       |미니미      |null                                     |0      |
|190     |07612adf-d59d-48b6-af25-7c7c77ab670a.png                                                                                   |류현욱 이 어린넘의쉐끼가 |74              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|192     |b1057a02-d99b-4cbe-88bd-995c369a0454.png                                                                                   |류현욱 죽는다진짜     |16              |4       |미니미      |null                                     |0      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |ㅇㅇㅇㅇ          |32              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |ㅇㅇㅇㅇ          |31              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |sss           |26              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|193     |b7d696f2-0d49-4c61-97e5-89ca61ea8d9f.jpg                                                                                   |sss           |24              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg                                                                                   |냐옹~           |21              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg                                                                                   |냐오~           |20              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg                                                                                   |힐링 마렵다냥       |19              |11      |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png                                                                                   |죽어            |46              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|199     |[null]                                                                                                                     |ㅌㅌㅌ           |71              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|199     |[null]                                                                                                                     |ㅌㅌㅌ           |70              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |ㅌㅌㅌㅌㅌ         |73              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |sssss         |44              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |sss           |43              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg                                                                                   |ㅋㅋㅋ           |39              |4       |미니미      |null                                     |1      |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png                                                                                   |ㅋㅋㅋㅋ          |41              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png                                                                                   |ㅋㅋㅋㅋ          |40              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif                                                                                   |ㅌㅌㅌ           |72              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png                                                                                   |진짜 변태같이 그렸다   |63              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png,e3418cba-faa0-491a-994f-ca87e14a5def.gif,edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |ㅇㅇㅇㅇㅇ         |51              |33      |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png                                                                                   |dddd          |67              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png                                                                                   |ㅇㅇㅇㅇㅇ         |77              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㅁㅁㅁㅁ          |79              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㄴㄴㄴㄴ          |78              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㅌㄴㅇㅇㅇㅇ        |75              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png                                                                                   |ㄱㄱㄱㄱㄱ         |68              |2       |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|--------|---------------------------------------------------------------------------------------------------------------------------|--------------|----------------|--------|---------|-----------------------------------------|-------|

[2024-12-11 19:38:05 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:38:05 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 19:38:07 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 4636 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:38:07 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:38:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:38:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:38:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:38:08 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 808 ms
[2024-12-11 19:38:08 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:38:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:38:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:38:09 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.726 seconds (process running for 2.053)
[2024-12-11 19:38:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:38:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 19:38:17 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > selFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:38:17 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:38:17 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@66eba0d0
[2024-12-11 19:38:17 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:38:17 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 19:38:17 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ             |ㄴㄴㄴ             |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:38:17 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         )
 {executed in 0 msec}
[2024-12-11 19:38:17 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:38:17 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
[2024-12-11 19:38:17 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
        WHERE A.feed_id IN
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=284) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:38:17 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=284) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.feed_comment_id,         A.comment,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,         U.pic AS writerPic         FROM feed_comment A         LEFT JOIN user U ON A.user_id = U.user_id         WHERE A.feed_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND C.feed_comment_id  <  A.feed_comment_id         )  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=284) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=284) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:41:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:41:44 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 19:41:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5220 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:41:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:41:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:41:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:41:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:41:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 809 ms
[2024-12-11 19:41:47 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:41:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:41:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:41:48 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.7 seconds (process running for 2.046)
[2024-12-11 19:41:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:41:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 19:41:53 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:41:53 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:41:53 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c311a66
[2024-12-11 19:41:53 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:41:53 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 19:41:53 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ             |ㄴㄴㄴ             |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:41:53 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         )
 {executed in 1 msec}
[2024-12-11 19:41:53 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:41:53 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
[2024-12-11 19:41:53 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
        WHERE A.feed_id IN
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=294) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:41:53 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=294) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.feed_comment_id,         A.comment,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,         U.pic AS writerPic         FROM feed_comment A         LEFT JOIN user U ON A.user_id = U.user_id         WHERE A.feed_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND C.feed_comment_id  <  A.feed_comment_id         )  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=294) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=294) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:42:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:42:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 19:42:44 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 7324 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:42:44 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:42:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:42:45 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:42:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:42:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 836 ms
[2024-12-11 19:42:45 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:42:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:42:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:42:46 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.802 seconds (process running for 2.159)
[2024-12-11 19:42:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:42:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 19:42:51 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:42:52 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:42:52 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@77553174
[2024-12-11 19:42:52 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:42:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-11 19:42:52 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ             |ㄴㄴㄴ             |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:42:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         )
 {executed in 1 msec}
[2024-12-11 19:42:52 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:42:52 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
[2024-12-11 19:42:52 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
        WHERE A.feed_id IN
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=304) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:42:52 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=304) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.feed_comment_id,         A.comment,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,         U.pic AS writerPic         FROM feed_comment A         LEFT JOIN user U ON A.user_id = U.user_id         WHERE A.feed_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND C.feed_comment_id  <  A.feed_comment_id         )  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=304) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=304) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:44:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:44:26 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 19:44:29 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 1256 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:44:29 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:44:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:44:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:44:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:44:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-11 19:44:29 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:44:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:44:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:44:30 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.71 seconds (process running for 2.113)
[2024-12-11 19:44:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:44:37 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 19:44:37 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:44:37 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:44:37 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6875c2b9
[2024-12-11 19:44:37 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:44:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 19:44:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ             |ㄴㄴㄴ             |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:44:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         )
 {executed in 1 msec}
[2024-12-11 19:44:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:44:37 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
[2024-12-11 19:44:37 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
        WHERE A.feed_id IN
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC;
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=314) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:44:37 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=314) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.feed_comment_id,         A.comment,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,         U.pic AS writerPic         FROM feed_comment A         LEFT JOIN user U ON A.user_id = U.user_id         WHERE A.feed_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND C.feed_comment_id  <  A.feed_comment_id         )  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC;
### Cause: java.sql.SQLSyntaxErrorException: (conn=314) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=314) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:45:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:45:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 19:45:36 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 5976 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:45:36 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:45:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:45:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:45:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:45:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 813 ms
[2024-12-11 19:45:37 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:45:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:45:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:45:37 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.715 seconds (process running for 2.075)
[2024-12-11 19:45:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:45:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-11 19:45:43 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:45:43 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:45:43 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4f805e1e
[2024-12-11 19:45:43 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:45:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 19:45:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ             |ㄴㄴㄴ             |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:45:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         )
 {executed in 0 msec}
[2024-12-11 19:45:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:45:43 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
[2024-12-11 19:45:43 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
        WHERE A.feed_id IN
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id, A.feed_comment_id DESC
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=324) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:45:43 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=324) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
### The error may exist in file [D:\LJM\GreenGramVer3_2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         A.feed_id,         A.feed_comment_id,         A.comment,         U.user_id AS writerUserId,         IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,         U.pic AS writerPic         FROM feed_comment A         LEFT JOIN user U ON A.user_id = U.user_id         WHERE A.feed_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )          AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND (         SELECT COUNT(*)         FROM feed_comment C         WHERE C.feed_id = A.feed_id         AND C.feed_comment_id  <  A.feed_comment_id         )  <  4         ORDER BY A.feed_id, A.feed_comment_id DESC
### Cause: java.sql.SQLSyntaxErrorException: (conn=324) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=324) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '' at line 62
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy83.selFeedCommentListByFeedIdsLimit4(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList2(FeedService.java:127)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList2(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList2(FeedController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.green.greengram.common.IpLoggingFilter.doFilter(IpLoggingFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-11 19:49:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:49:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-11 19:49:08 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.12 with PID 11044 (D:\LJM\GreenGramVer3_2\build\classes\java\main started by Administrator in D:\LJM\GreenGramVer3_2)
[2024-12-11 19:49:08 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-11 19:49:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-11 19:49:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-11 19:49:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-11 19:49:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 794 ms
[2024-12-11 19:49:09 INFO restartedMain] [com.green.greengram.common.model.MyFileUtils] MyFileUtils - 생성자: D:/2024-02/download/greengram_ver3
[2024-12-11 19:49:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-11 19:49:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-11 19:49:09 INFO restartedMain] [com.green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.703 seconds (process running for 2.048)
[2024-12-11 19:49:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-11 19:49:17 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null, feedIds=null)
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2ec7bf10
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-11 19:49:17 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents         |location        |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ             |ㄴㄴㄴ             |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ          |헤헤헤헤헤           |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff           |ffff            |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf            |fff             |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz              |zzz             |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss              |aaaa            |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg            |gd              |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg              |gg              |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz              |zz              |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|217     |ㅋㅋㅋㅋ             |ㅋㅋㅋ             |2024-12-06 09:37:27 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|216     |ㅍㅍㅍㅍ             |ㅍㅍ              |2024-12-06 09:37:14 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|215     |ㅠㅠㅠㅠㅠㅠㅠㅠ         |ㅠㅠ              |2024-12-06 09:35:19 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|214     |ㅁㄴㅇㅁㄴㅇ           |ㅁㄴㅇㅁㄴㅇ          |2024-12-06 09:30:38 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|213     |ㅇㅁㄴㅇㅁㄴㅇ          |ㅁㄴㅇㅁㄴㅇㅁㄴㅁㄴ      |2024-12-06 09:29:56 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|212     |ㅁㄴㅇ              |헤헤헤헤헤           |2024-12-06 09:26:39 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |1      |
|211     |제발요              |제발              |2024-12-06 09:23:17 |33             |ㅜㅜ       |a6ace6db-926a-4045-a622-a28541e39ce3.png |0      |
|210     |저능해....          |꺄아~~~           |2024-12-06 08:54:15 |4              |미니미      |null                                     |1      |
|199     |Sample Content   |Sample Location |2024-12-05 20:35:26 |1              |aa       |a99bef24-b661-48eb-911a-99ab0ed2832a.jpg |1      |
|195     |피해자면은 그냥 가만히 계셔요 |머니게임            |2024-12-03 16:32:05 |8              |22       |null                                     |0      |
|194     |냐옹~ 힐링하라냥        |따뜻한 안방          |2024-12-03 13:11:04 |11             |괴도그린     |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |0      |
|--------|-----------------|----------------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:49:17 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         , 
            217
         , 
            216
         , 
            215
         , 
            214
         , 
            213
         , 
            212
         , 
            211
         , 
            210
         , 
            199
         , 
            195
         , 
            194
         )
 {executed in 0 msec}
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|194     |5f065f35-7080-477a-86cb-abe660c3c732.jpg |
|195     |4d69290d-69a9-40b1-8667-e7ed85ff8deb.png |
|210     |50794441-8a5f-4cc9-9685-208245af59d6.jpg |
|211     |009a01a9-7cef-4fc5-876c-5ede45dd4fc2.png |
|212     |b6d90a6f-617f-48f8-b1a5-dfd604eb309b.gif |
|213     |bfd5c206-a322-4f6c-a0b6-06e2a021ad8a.png |
|214     |2759dc87-444a-4b89-bc3a-35751aa27fae.png |
|215     |3496ae2b-1a05-4253-9339-50394d54d245.png |
|216     |114415da-5b30-4851-9d33-681c52befb08.gif |
|217     |9ed03755-88f1-4658-a20d-29bb4876b24b.png |
|217     |e3418cba-faa0-491a-994f-ca87e14a5def.gif |
|217     |edea2ab7-d8bf-4c25-ad81-a65ac86dbc69.png |
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:49:17 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
         WHERE A.feed_id IN
                (
                    233
                ,
                    232
                ,
                    231
                ,
                    230
                ,
                    229
                ,
                    228
                ,
                    227
                ,
                    226
                ,
                    222
                ,
                    217
                ,
                    216
                ,
                    215
                ,
                    214
                ,
                    213
                ,
                    212
                ,
                    211
                ,
                    210
                ,
                    199
                ,
                    195
                ,
                    194
                ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id DESC, A.feed_comment_id DESC
 {executed in 1 msec}
[2024-12-11 19:49:17 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|----------------|------------|--------|-----------|-----------------------------------------|
|feed_id |feed_comment_id |comment     |user_id |writername |pic                                      |
|--------|----------------|------------|--------|-----------|-----------------------------------------|
|232     |68              |ㄱㄱㄱㄱㄱ       |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|232     |65              |dddd        |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|232     |62              |ㄹㄹㄹㄹ        |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|232     |61              |ㄹㄹㄹㄹㄹ       |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|228     |77              |ㅇㅇㅇㅇㅇ       |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|222     |67              |dddd        |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|217     |51              |ㅇㅇㅇㅇㅇ       |33      |ㅜㅜ         |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|215     |63              |진짜 변태같이 그렸다 |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|212     |72              |ㅌㅌㅌ         |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|211     |41              |ㅋㅋㅋㅋ        |33      |ㅜㅜ         |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|211     |40              |ㅋㅋㅋㅋ        |33      |ㅜㅜ         |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|210     |73              |ㅌㅌㅌㅌㅌ       |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|210     |44              |sssss       |33      |ㅜㅜ         |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|210     |43              |sss         |33      |ㅜㅜ         |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|210     |39              |ㅋㅋㅋ         |4       |미니미        |null                                     |
|199     |71              |ㅌㅌㅌ         |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|199     |70              |ㅌㅌㅌ         |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|195     |46              |죽어          |33      |ㅜㅜ         |a6ace6db-926a-4045-a622-a28541e39ce3.png |
|194     |21              |냐옹~         |11      |괴도그린       |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|194     |20              |냐오~         |11      |괴도그린       |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|194     |19              |힐링 마렵다냥     |11      |괴도그린       |fa0bf5e6-2955-4980-a764-8b4acfe05ad3.jpg |
|--------|----------------|------------|--------|-----------|-----------------------------------------|

[2024-12-11 19:49:29 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p : FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=2, feedIds=null)
[2024-12-11 19:49:29 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] userController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=2)
[2024-12-11 19:49:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , A.writer_user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 2

            WHERE A.writer_user_id = 2

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-11 19:49:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id  -- 프로필 사용자를 팔로잉한 다른 사용자
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id -- 프로필 사용자가 팔로잉한 다른 사용자
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id -- 프로필 사용자가 작성한 피드
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id -- 프로필 사용자의 피드의 좋아요 정보
        WHERE A.user_id = 2;
 {executed in 1 msec}
[2024-12-11 19:49:29 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |2024-11-29 12:30:29 |쩡미깜띠기ㅎㅎㅎ |0        |3         |9         |3               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-11 19:49:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |writer_user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|
|233     |ㄴㄴㄴㄴ     |ㄴㄴㄴ      |2024-12-11 17:21:38 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|232     |ㅎㅎㅎㅎㅎㅎㅎ  |헤헤헤헤헤    |2024-12-10 10:55:19 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|231     |ffffff   |ffff     |2024-12-10 10:54:13 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|230     |fgfgf    |fff      |2024-12-10 10:53:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |1      |
|229     |zzz      |zzz      |2024-12-10 10:51:07 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|228     |sss      |aaaa     |2024-12-10 10:50:00 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|227     |dgggg    |gd       |2024-12-10 10:49:50 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|226     |ggg      |gg       |2024-12-10 10:49:12 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|222     |zzz      |zz       |2024-12-10 08:56:23 |2              |쩡미깜띠기ㅎㅎㅎ |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |0      |
|--------|---------|---------|--------------------|---------------|---------|-----------------------------------------|-------|

[2024-12-11 19:49:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT feed_id AS feedId
        , pic
        FROM feed_pic
        WHERE feed_id in
         (  
            233
         , 
            232
         , 
            231
         , 
            230
         , 
            229
         , 
            228
         , 
            227
         , 
            226
         , 
            222
         )
 {executed in 0 msec}
[2024-12-11 19:49:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|
|feed_id |pic                                      |
|--------|-----------------------------------------|
|222     |f967f878-cd70-4ec4-9acd-089f7b6db5e6.png |
|226     |dab5b0f5-bf43-4da5-b967-e3cb51bdbb2a.png |
|227     |2e47d178-ee29-40d6-b1cd-a773e956d19c.gif |
|228     |4cfffab8-1fe3-42fb-b0e1-fc2fdedaec17.png |
|229     |e2b79828-fdc6-4015-a3fb-61b3896f861f.png |
|230     |28732f5d-a8f4-41be-90bd-3028a68fccf4.png |
|231     |ac2c0af2-7000-4d22-a4e1-57d13ecacf0d.gif |
|232     |b83e7a6d-91aa-4c89-8f9c-9a241076deb5.png |
|233     |92898300-a3e2-4554-9532-4278613bbaa2.png |
|--------|-----------------------------------------|

[2024-12-11 19:49:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id,
        A.feed_comment_id,
        A.comment,
        U.user_id AS writerUserId,
        IF(U.nick_name IS NULL, U.uid, U.nick_name) AS writerName,
        U.pic AS writerPic
        FROM feed_comment A
        LEFT JOIN user U ON A.user_id = U.user_id
         WHERE A.feed_id IN
                (
                    233
                ,
                    232
                ,
                    231
                ,
                    230
                ,
                    229
                ,
                    228
                ,
                    227
                ,
                    226
                ,
                    222
                ) 
        AND (
        SELECT COUNT(*)
        FROM feed_comment C
        WHERE C.feed_id = A.feed_id
        AND C.feed_comment_id  <  A.feed_comment_id
        )  <  4
        ORDER BY A.feed_id DESC, A.feed_comment_id DESC
 {executed in 1 msec}
[2024-12-11 19:49:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----------------|--------|--------|-----------|-----------------------------------------|
|feed_id |feed_comment_id |comment |user_id |writername |pic                                      |
|--------|----------------|--------|--------|-----------|-----------------------------------------|
|232     |68              |ㄱㄱㄱㄱㄱ   |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|232     |65              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|232     |62              |ㄹㄹㄹㄹ    |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|232     |61              |ㄹㄹㄹㄹㄹ   |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|228     |77              |ㅇㅇㅇㅇㅇ   |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|222     |67              |dddd    |2       |쩡미깜띠기ㅎㅎㅎ   |00afc96e-0786-4ee5-8be4-8c9b2ef2bd86.gif |
|--------|----------------|--------|--------|-----------|-----------------------------------------|

[2024-12-11 19:53:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-11 19:53:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
